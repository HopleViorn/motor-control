//; ===================================================
//; | U(bit15) |-----------------|_________________|  |
//; | V(bit14) ____________|-----------------|_____   |
//; | W(bit13) ------|_________________|------------  |
//; | ----------------------------------------------- |
//; |             5     4     6     2     3     1     |
//; | angle      030   090   150   210   270   330    |
//; | 	    000   060   120   180   240	  300   360   |
//; | teta       278  833  1389  1944  2500  3055     |
//; |           0   556  1111  1667  2222  2778  3333 |
//; ===================================================
const Uint16 uvwtab[]=
{	330,
	210,
	270,
	90,
	30,
	150
};
const Uint16 uvwtab_sumtak[]=
{
	270,
	150,
	210,
	30,
	330,
	90
};
// ����ܶ����
const Uint16 LedCode[]=
{
	0xCF,	// 0
	0x05,	// 1
	0xE3,	// 2
	0x67,	// 3 
	0x2D,	// 4
	0x6E,	// 5
	0xEE,	// 6
	0x07,	// 7
	0xEF,	// 8
	0x6F,	// 9
	0xAF,	// A
	0xEC,	// b
	0xCA,	// C
	0xE5,	// d
	0xEA,	// E
	0xAA	// F
};

// �������Ա���������0: �޷���ʮ���� 1:�з���ʮ���� 2:�˿���ʾ 3:ʮ��������ʾ 4:������ʾ<9999ʮ������ʾ��>9999ʮ��������ʾ
const Uint16 UnAttribute[]=
{
	1, // Un000
	1, // Un001
	1, // Un002
	1, // Un003 
	0, // Un004
	2, // Un005
	2, // Un006
	2, // Un007
	1, // Un008
	1, // Un009
	1, // Un010
	4, // Un011
	3, // Un012
	1, // Un013
	1, // Un014
	1, // Un015
	1, // Un016
	1, // Un017
	1, // Un018
	1, // Un019
	2, // Un020
	2  // Un021
};

// �������Ա�
const Uint16 PnAttribute[][4]=
{
//	����������Сֵ�����ֵ������ֵ 		// 0: unsigned ; 1: signed ; 2: bit ; 3: hex
		2, 		0,	   15,	    6,	// Pn000:	[bit0:�����ŷ�ON,bit1:P-OT��ֹ,bit2:N-OT��ֹ,bit3:˲ͣ����ʹ��]
		2, 		0,	   15,		0,	// Pn001:	[bit0:���תģʽ,bit1:ģ���ٶ�����ʹ��,bit2:ģ��ת������ʹ��,bit3:�ڶ����ӳ���ʹ��]
		2,		0,	   15,		2,	// Pn002:	[bit0:���ӳ����л���ʽ��bit1:[0]���б���������ȥ��ë��[1]ʵ��,bit2[0]������ֵ��������ر���[1]��������ֵ��������ر���,bit3[0]�����ź���ֵȱʡֵ[1]�����ź���ֵ�ſ�ֵ
		2,		0,	   15,		0,	// Pn003:	[bit0:�������뱨��ʹ�ܣ�bit1:c���屣����bit2:���ٲ�����bit3:������ǿ]
		3,		0, 0x3425,		1,	// Pn004:	[hex0:ֹͣ��ʽ��hex1:ƫ����������㷽ʽ��hex2:ָ��������ʽ��hex3:����ȡ��]
		3,		0, 0x33E3,		0x10d0,	// Pn005:	[hex0:ת��ǰ����ʽ��bit0:ת��ǰ������,bit1:[0]->���ٶ�ǰ����1ms����λ[1]->���ٶ�ǰ����0.1ms��Ϊ��λ������
									//			 hex1:���Ʒ�ʽ��hex2:ԭPn047�������hex3:����ͺ�]
		3,		0, 0x2133, 0x0020,	// Pn006:	[hex0:��������ѡ��hex1:����ֱ���ѡ��hex2:��Ƶ�������ƿ���, hex3:�����˲���ֹƵ��ѡ��(0:4M, 1:650K, 2:100K)]
		2,		0,		1,		0,	// Pn007:	[bit0:C����չ�� bit1~bit3:����]
		0,		0,		0,		0,	// Pn008:	����
		0,		0,		0,		0,	// Pn009:	����
		0,		0,		0,		0,	// Pn010:	����
		0,		0,		0,		0,	// Pn011:	����
		0,		0,		0,		0,	// Pn012:	����
		0,		0,		0,		0,	// Pn013:	����
		0,		0,		0,		0,	// Pn014:	����
		0,		0,		0,		0,	// Pn015:	����

		0, 		0,	 	6,	  	0,	// Pn016:	Pn100 ʵʱ�Զ������������[0:�û��ֶ����棬1,2,3=����ģʽ;4,5,6=��ֱ����;1,4 = ���ع���û�б仯;2,5 = ���ع����仯��С;3,6=���ع����仯�ܴ�]
		0, 		0,	   15,	   	5,	// Pn017:	Pn101 ���ظ���ѡ��
		0,		1,	 4000,	  40,	// Pn018:	Pn102 �ٶȻ����浥λ:Hz
		0,		1,	 4096,	  1000,	// Pn019:	Pn103 �ٶȻ�����ʱ�䵥λ:0.1ms
		0,		0,	 1000,	   40,	// Pn020:	Pn104 λ�û����浥λ:Hz
		0,		0,	  250,		4,	// Pn021:	Pn105 ת��ָ���˲�������
		0, 		0,	20000,	   	30,	// Pn022:	Pn106 ���ع����ٷֱ�
		0,		1,	 4000,	   40,	// Pn023:	Pn107 �ٶȻ��ڶ����浥λ:Hz
		0,		1,	 4096,	  200,	// Pn024:	Pn108 �ٶȻ��ڶ�����ʱ�䵥λ:0.1ms
		0,		0,	 1000,	   40,	// Pn025:	Pn109 λ�û��ڶ����浥λ:Hz
		0, 		0,	  250,	   	4,	// Pn026:	Pn110 �ڶ�ת���˲�ʱ�䳣��
		0,		0,	  300,		0,	// Pn027:	Pn111 �ٶ�ƫ��
		0,		0,	  100,		0,	// Pn028:	Pn112 ǰ��
		0,		0,	  640,		0,	// Pn029:	Pn113 ǰ���˲�
		0, 		0,	  100,	   	0,	// Pn030:	Pn114 ת��ǰ���ٷֱ�
		0, 		0,	  640,	   	0,	// Pn031:	Pn115 ת��ǰ���˲�ʱ�䳣��

		0, 		0,	  	4,	   	0,	// Pn032:	Pn116 P/PI�л�����[0:ת��ָ��ٷֱȣ�1:ƫ���������ֵ��2:�������ٶ���ֵ��3:�����ٶ���ֵ��4:�̶�PI]
		0, 		0,	  300,	  200,	// Pn033:	Pn117 ת���л���ֵ
		0, 		0,	10000,	   	0,	// Pn034:	Pn118 ƫ��������л���ֵ
		0, 		0,	 3000,	   	0,	// Pn035:	Pn119 �������ٶ��л���ֵ
		0, 		0,	10000,	   	0,	// Pn036:	Pn120 �����ٶ��л���ֵ
		0, 		0,	  	6,	   	0,	// Pn037:	Pn121 �����л�����[0:�̶�����һ�����棬1:�ⲿ���������л���2:ת�ذٷֱȣ�3:ƫ���������ֵ��
									//						4:�������ٶ���ֵ��10r/min����5:�����ٶ���ֵ��6:��λ��ָ������]
		0, 		0,	20000,	   	0,	// Pn038:	Pn122 �л��ӳ�ʱ��
		0, 		0,	20000,	   	0,	// Pn039:	Pn123 �л��ż�ˮƽ
		0, 		0,	20000,	   	0,	// Pn040:	Pn124 �ٶ���������л�ʱ��
		0, 		0,	20000,	   	0,	// Pn041:	Pn125 λ�������л�ʱ��
		0, 		0,	20000,	   	0,	// Pn042:	Pn126 �л��ͻ�
		0, 		0,	  100,	   10,	// Pn043:	Pn127 ���ٲ����˲�
		0, 		0,	  	3,	   	3,	// Pn044:	Pn128 ʵʱ����ʱ�ٶ������λ������Ĺ�ϵ[0 = Kv : Kp-->1;1 = Kv : Kp-->2;2 = Kv : Kp-->3;3 = Kv : Kp-->4]
		0, 		0,	30000,	  	0,	// Pn045:	Pn129 ����У��ϵ��
		0,		0,	 3000,		0,	// Pn046:	Pn130 Ħ�����أ�0.1%��
		0,		0,	  100,		0,	// Pn047:	Pn131 Ħ�������ٶ���Ч����rpm��
		0,		0,	 1000,		0,	// Pn048:	Pn132 ճ��Ħ����0.1%��1000rpm��Ӧ�ĶŤ��
		0,		1,	 2000,	  700,	// Pn049:	Pn133 ѹ��������ϵ��1
		0,		1,	20000,	  600,	// Pn050:	Pn134 ѹ��������ʱ��1  ��λ0.1ms
		0, 		0,    500,	   50,	// Pn051:	Pn135 ѹ��ģʽ�������ת��(����ʱע����Ƿ�ɷ���)
		1, 0xFC00,   1024,      0,  // Pn052:	Pn136 ѹ������ƫ��������
		0,		0,	 1000,	   10,	// Pn053:	Pn137 ѹ�������˲�ʱ�䳣��(0.1ms)
		0,		0,	 1000,	   10,	// Pn054:	Pn138 ѹ�������˲�ʱ�䳣��(0.1ms)
		0,		1,	 2000,	  700,	// Pn055:	Pn139 ѹ��������ϵ��2
		0,		1,	20000,	  600,	// Pn056:	Pn140 ѹ��������ʱ��2  ��λ0.1ms
		0,		1,	 2000,	  700,	// Pn057:	Pn141 ѹ��������ϵ��3
		0,		1,	20000,	  600,	// Pn058:	Pn142 ѹ��������ʱ��3  ��λ0.1ms
		0, 		1,	 2000,	  700,	// Pn059:	Pn143 ѹ��������ϵ��4
		0,		1,	20000,	  600,	// Pn060:	Pn144 ѹ��������ʱ��4  ��λ0.1ms
		0,		0,	 2000,	  800,	// Pn061:	Pn145 ѹ����PPI�л���ֵ ��λ0.1bar
		0,		0,		0,		0,	// Pn062:	Pn146 ����
		0,		0,		0,		0,	// Pn063:	Pn147 ����
		0,		0,		0,		0,	// Pn064:	Pn148 ����
		0,		0,		0,		0,	// Pn065:	Pn149 ����

		#if	  ENC_TYPE == ENC2500
		0,	    1,   2500,   2500,	// Pn066:	Pn200 PG��Ƶ
		#elif ENC_TYPE == ENC17BIT
		0,	    16, 16384,  16384,	// Pn066:	Pn200 PG��Ƶ
		#endif
		0,		1,	65535,		1,	// Pn067:	Pn201 ��һ���ӳ��ַ���
		0,		1,	65535,		1,	// Pn068:	Pn202 ���ӳ��ַ�ĸ
		0,		1,	65535,		1,	// Pn069:	Pn203 �ڶ����ӳ��ַ���
		0,		0,	32767,		0,	// Pn070:	Pn204 λ��ָ���˲�ʱ�䳣��
		0,		0,		1,		0,	// Pn071:	Pn205 λ��ָ���˲���ʽѡ��
		0,		0,		0,		0,	// Pn072:	Pn206 ����
		0,		0,		0,		0,	// Pn073:	Pn207 ����
		0,		0,		0,		0,	// Pn074:	Pn208 ����
		0,		0,		0,		0,	// Pn075:	Pn209 ����
		0,		0,		0,		0,	// Pn076:	Pn210 ����
		0,		0,		0,		0,	// Pn077:	Pn211 ����
		0,		0,		0,		0,	// Pn078:	Pn212 ����
		0,		0,		0,		0,	// Pn079:	Pn213 ����

		0,		0,	 3000,	  150,	// Pn080:	Pn300 �ٶ�ָ���������棬��λr/min.v
		1,      0,	 1000,	    0,	// Pn081:	Pn301 ģ���ٶȸ������ƫ��
		0,		0,	    0,	  	0,	// Pn082:	����
		0,		0,	    0,	  	0,	// Pn083:	����
		0,      0,	 16500,	  500,	// Pn084:	Pn304 Pn304 参数速度
		0, 		0,	 6000,	  500,	// Pn085:	Pn305 JOG�ٶ�
		0,      0,	99999,		0,	// Pn086:	Pn306 ����������ʱ��
		0, 		0,	99999,		0,	// Pn087:	Pn307 ����������ʱ��
		0, 		0,	10000,		0,	// Pn088:	Pn308 �ٶ��˲�ʱ�䳣��
		0, 		0,	10000,		0,	// Pn089:	Pn309 S��������ʱ��
		0, 		0,	 	3,		0,	// Pn090:	Pn310 �ٶ�ָ��������ʽ[0:б�� 1:S���� 2:һ���˲� 3:�����˲�]
		0, 		0,	    3,		0,	// Pn091:	Pn311 S��״ѡ��
		1, 0xE890,	 6000,	  500,	// Pn092:	Pn312 ͨѶ�㶯�ٶ�
		0, 		0,	10000,		0,	// Pn093:	Pn313 ѹ��б��ʱ�䵥λ0.1ms:100bar������ʱ��
		0, 		0,	10000,	  250,	// Pn094:	Pn314 ѹ����������0.1bar/v
		0, 		0,	10000,	  140,	// Pn095:	Pn315 ѹ����������0.1bar/v
		1, 0xE890,	 6000,	  100,	// Pn096:	Pn316 �ڲ��ٶ�1
		1, 0xE890,	 6000, 	  200,	// Pn097:	Pn317 �ڲ��ٶ�2
		1, 0xE890,	 6000,	  300,	// Pn098:	Pn318 �ڲ��ٶ�3
		1, 0xE890,	 6000, 0xFF9C,	// Pn099:	Pn319 �ڲ��ٶ�4
		1, 0xE890,	 6000, 0xFF38,	// Pn100:	Pn320 �ڲ�5
		1, 0xE890,	 6000, 0xFED4,	// Pn101:	Pn321 �ڲ��ٶ�6
		1, 0xE890,	 6000,	  500,	// Pn102:	Pn322 �ڲ��ٶ�7

		0, 	   10,	  100,	   33,	// Pn103:	Pn400 Ť������ָ������
		0, 		0,	  300,	  300,	// Pn104:	Pn401 ��תת���ڲ�����
		0, 		0,	  300,	  300,	// Pn105:	Pn402 ��תת���ڲ�����
		0, 		0,	  300,	  100,	// Pn106:	Pn403 ��ת�ⲿת������
		0, 		0,	  300,	  100,	// Pn107:	Pn404 ��ת�ⲿת������
		0,		0,	  300,	  300,	// Pn108:	Pn405 �����ƶ�ת������
		0, 		0,	 6000,	 1500,	// Pn109:	Pn406 Ť�ؿ���ʱ���ٶ�����
		0, 	   50,	 5000,	 5000,	// Pn110:	Pn407 �޲�Ƶ��1
		0, 		0,	   11,		1,	// Pn111:	Pn408 �޲����1
		0, 	   50,	 5000,	 5000,	// Pn112:	Pn409 �޲�Ƶ��2
		0, 		0,	   11,		1,	// Pn113:	Pn410 �޲����2
		0, 	   50,	  500,	  100,	// Pn114:	Pn411 ��Ƶ��(Unit: 0.1Hz)
		0, 		0,	  200,	   25,	// Pn115:	Pn412 ģ������ϵ��
		0, 		1,	 2000,	  100,	// Pn116:	Pn413 ת�ؿ����ӳ�ʱ��(0.1ms)
		0,		10,	 1000,	   50,	// Pn117:	Pn414 ת�ؿ����ٶ��ͻ���(1rpm)
		1,      0,	 1000,	    0,	// Pn118:	Pn415 ģ��ת�ظ������ƫ��
		0, 		0,	 	0,		0,	// Pn119:	Pn416 ����

		0, 		0,	 5000,	   10,	// Pn120:	Pn500 ��λ���
		0, 		0,	  100,	   10,	// Pn121:	Pn501 ͬ�����
		0, 	    0,	 3000,	   10,	// Pn122:	Pn502 ��Ƕλת��
		0, 		0,	 3000,	   20,	// Pn123:	Pn503 ��ת���ת��TGON
		0, 	    1,	32767,	 1024,	// Pn124:	Pn504 ƫ��������������
		1, 0xF830,	 2000,	    0,	// Pn125:	Pn505 �ŷ�On�ȴ�ʱ��
		0,		0,	  500,		0,	// Pn126:	Pn506 �����ĵȴ�����
		0,	   10,	  100,	  100,	// Pn127:	Pn507 �ƶ��ȴ��ٶ�
		0,	   10,	  100,	   50,	// Pn128:	Pn508 �ƶ��ȴ�ʱ��
		3, 		0, 0xEEEE, 0x3210,  // Pn129:	Pn509 ������˿ڷ��䵽�ź�16����4λһ���˿�
		3, 		0, 0xEEEE, 0x7654,  // Pn130:	Pn510 ������˿ڷ��䵽�ź�16����4λһ���˿�
		3,		0, 0x0888, 0x0210,	// Pn131:	Pn511 ����źŷ���{hex00:1CN78,hex01:CN12,hex02:cn56[0:COIN,1:TGON,2:S-RDY,3:CLT,4:BRK,5:CPULSE,6:OT,7:RD]}
		2,		0,	   15,		0,	// Pn132:	Pn512 Bus_io_LEn
		2,		0,	   15,		0,	// Pn133:	Pn513 Bus_io_HEn
		0, 		0,	 1000,		1,	// Pn134:	Pn514 ����˿��˲�ʱ��
		0, 		0,	    3,		1,	// Pn135:	Pn515 �����˿��˲�ʱ��
		2, 		0,	   15,		0,	// Pn136:	Pn516 ����˿��ź�ȡ��
		2, 		0, 	   15,		0,	// Pn137:	Pn517 ����˿��ź�ȡ��
		0, 	   50,	 2000,	  125,	// Pn138:	Pn518 ��̬�ƶ�ʱ��
		0, 		0,	10000,	    3,	// Pn139:	Pn519 ���б������������ʱ��
		0, 		0,  60000,	  500,	// Pn140:	Pn520 ��λʱ��
		#if DRV_TYPE == DRV_15KW
		2, 		0,	   15, 		0,	// Pn141:	Pn521 Bit0��A15|| Bit1��A14|| Bit2��A13|| Bit3��A20
		2, 		0,	   15,		0,	// Pn142:	Pn522 Bit0��0��Ӳ�����	1��������|| Bit1~Bit3������
		2, 		0,	   15,		2,	// Pn143:	Pn523 Bit0��A18|| Bit1��A19��A22|| Bit2~Bit3������
		0, 		0,	 	0,		0,	// Pn144:	Pn524 ����
		0, 	  100,	  150,	  100,	// Pn145:	Pn525 ���ر�����ֵ  ��λ�ٷֱ�
		0, 	   50,	  180,	  110,	// Pn146:	Pn526 ������ȱ����¶ȷ�ֵ ��λ���϶�
		0, 	  480,	  520,	  500,	// Pn147:	Pn527 ��Դ5v��ʵ�ʲ���ֵ����λ��10mv
		#elif DRV_TYPE == DRV_400W
		2, 		0,	   15, 		1,	// Pn141:	Pn521 Bit0��A15|| Bit1��A14|| Bit2��A13|| Bit3��A20
		2, 		0,	   15,		0,	// Pn142:	Pn522 Bit0��0��Ӳ�����	1��������|| Bit1~Bit3������
		2, 		0,	   15,		2,	// Pn143:	Pn523 Bit0��A18|| Bit1��A19��A22|| Bit2~Bit3������
		0, 		0,	 	0,		0,	// Pn144:	Pn524 ����
		0, 	  100,	  150,	  100,	// Pn145:	Pn525 ���ر�����ֵ  ��λ�ٷֱ�
		0, 		0,	 	0,	    0,	// Pn146:	Pn526 ����
		0, 		0,	 	0,		0,	// Pn147:	Pn527 ����
		#else
		2, 		0,	   15, 		8,	// Pn141:	Pn521 Bit0��A15|| Bit1��A14|| Bit2��A13|| Bit3��A20
		2, 		0,	   15,		0,	// Pn142:	Pn522 Bit0��0��Ӳ�����	1��������|| Bit1~Bit3������
		2, 		0,	   15,		2,	// Pn143:	Pn523 Bit0��A18|| Bit1��A19��A22|| Bit2~Bit3������
		0, 		0,	 	0,		0,	// Pn144:	Pn524 ����
		0, 	  100,	  150,	  100,	// Pn145:	Pn525 ���ر�����ֵ  ��λ�ٷֱ�
		0, 		0,	 	0,		0,	// Pn146:	Pn526 ����
		0, 		0,	 	0,		0,	// Pn147:	Pn527 ����
		#endif
		2, 		0,	   15,		0,	// Pn148:	Pn528 ����˿��ź�ȡ��{Bit00:1CN_5,6;Bit01:1CN_7,8;Bit02:1CN_9,10;Bit03:1CN_11,12}
		0, 		0,	 	0,		0,	// Pn149:	Pn529 ����
		0, 		0,	 	0,		0,	// Pn150:	Pn530 ����
		0, 		0,	 	0,		0,	// Pn151:	Pn531 ����

		1, 0xD8F1,	 9999,		0,	// Pn152:	Pn600 ��λ����λ������[10000P]
		1, 0xD8F1,	 9999,		0,	// Pn153:	Pn601 ��λ����λ������[1P]
		1, 0xD8F1,	 9999,		0,	// Pn154:	Pn602 ��λ����λ������[10000P]
		1, 0xD8F1,	 9999,		0,	// Pn155:	Pn603 ��λ����λ������[1P]
		1, 0xD8F1,	 9999,		0,	// Pn156:
		1, 0xD8F1,	 9999,		0,	// Pn157:
		1, 0xD8F1,	 9999,		0,	// Pn158:
		1, 0xD8F1,	 9999,		0,	// Pn159:
		1, 0xD8F1,	 9999,		0,	// Pn160:
		1, 0xD8F1,	 9999,		0,	// Pn161:
		1, 0xD8F1,	 9999,		0,	// Pn162:
		1, 0xD8F1,	 9999,		0,	// Pn163:
		1, 0xD8F1,	 9999,		0,	// Pn164:
		1, 0xD8F1,	 9999,		0,	// Pn165:
		1, 0xD8F1,	 9999,		0,	// Pn166:
		1, 0xD8F1,	 9999,		0,	// Pn167:
		1, 0xD8F1,	 9999,		0,	// Pn168:
		1, 0xD8F1,	 9999,		0,	// Pn169:
		1, 0xD8F1,	 9999,		0,	// Pn170:
		1, 0xD8F1,	 9999,		0,	// Pn171:
		1, 0xD8F1,	 9999,		0,	// Pn172:
		1, 0xD8F1,	 9999,		0,	// Pn173:
		1, 0xD8F1,	 9999,		0,	// Pn174:
		1, 0xD8F1,	 9999,		0,	// Pn175:
		1, 0xD8F1,	 9999,		0,	// Pn176:
		1, 0xD8F1,	 9999,		0,	// Pn177:
		1, 0xD8F1,	 9999,		0,	// Pn178:
		1, 0xD8F1,	 9999,		0,	// Pn179:
		1, 0xD8F1,	 9999,		0,	// Pn180:
		1, 0xD8F1,	 9999,		0,	// Pn181:
		1, 0xD8F1,	 9999,		0,	// Pn182:
		1, 0xD8F1,	 9999,		0,	// Pn183:	Pn631

		0, 		0,	 3000,	  500,	// Pn184:	Pn632
		0, 		0,	 3000,	  500,	// Pn185:
		0, 		0,	 3000,	  500,	// Pn186:
		0, 		0,	 3000,	  500,	// Pn187:
		0, 		0,	 3000,	  500,	// Pn188:
		0, 		0,	 3000,	  500,	// Pn189:
		0, 		0,	 3000,	  500,	// Pn190:
		0, 		0,	 3000,	  500,	// Pn191:
		0, 		0,	 3000,	  500,	// Pn192:
		0, 		0,	 3000,	  500,	// Pn193:
		0, 		0,	 3000,	  500,	// Pn194:
		0, 		0,	 3000,	  500,	// Pn195:
		0, 		0,	 3000,	  500,	// Pn196:
		0, 		0,	 3000,	  500,	// Pn197:
		0, 		0,	 3000,	  500,	// Pn198:
		0, 		0,	 3000,	  500,	// Pn199:	Pn647

		0, 		0,	32767,		0,	// Pn200:	Pn648
		0, 		0,	32767,		0,	// Pn201:
		0, 		0,	32767,		0,	// Pn202:
		0, 		0,	32767,		0,	// Pn203:
		0, 		0,	32767,		0,	// Pn204:
		0, 		0,	32767,		0,	// Pn205:
		0, 		0,	32767,		0,	// Pn206:
		0, 		0,	32767,		0,	// Pn207:
		0, 		0,	32767,		0,	// Pn208:
		0, 		0,	32767,		0,	// Pn209:
		0, 		0,	32767,		0,	// Pn210:
		0, 		0,	32767,		0,	// Pn211:
		0, 		0,	32767,		0,	// Pn212:
		0, 		0,	32767,		0,	// Pn213:
		0, 		0,	32767,		0,	// Pn214:
		0, 		0,	32767,		0,	// Pn215:	Pn663

		0, 		0,	  300,	   10,	// Pn216:	Pn664
		0, 		0,	  300,	   10,	// Pn217:
		0, 		0,	  300,	   10,	// Pn218:
		0, 		0,	  300,	   10,	// Pn219:
		0, 		0,	  300,	   10,	// Pn220:
		0, 		0,	  300,	   10,	// Pn221:
		0, 		0,	  300,	   10,	// Pn222:
		0, 		0,	  300,	   10,	// Pn223:
		0, 		0,	  300,	   10,	// Pn224:
		0, 		0,	  300,	   10,	// Pn225:
		0, 		0,	  300,	   10,	// Pn226:
		0, 		0,	  300,	   10,	// Pn227:
		0, 		0,	  300,	   10,	// Pn228:
		0, 		0,	  300,	   10,	// Pn229:	
		0, 		0,	  300,	   10,	// Pn230:
		0, 		0,	  300,	   10,	// Pn231:	Pn679

		0,		0,		0,		0,	// Pn232:	Pn680 ����
		3, 0x0000, 0x0133, 0x0000,	// Pn233:	Pn681 �����Լ�����
									//			hex0: ѡ�񵥴�/ѭ��������/�ο���
									//			hex1: ������������ʽ
									//			hex2: �����ź����뷽ʽ
									//			hex3: ����
		0,		0,		1,		0,	// Pn234: 	Pn682 ��̷�ʽ
		0, 		0,	   15,	    0,	// Pn235:	Pn683 �����ʼ��
		0, 		0,	   15,	    1,	// Pn236:	Pn684 �����ֹ��
		0, 		0,	 3000,	 1500,	// Pn237:	Pn685 �����г��ٶ�
		0, 		0,	  200,	   30,	// Pn238:	Pn686 �뿪�г̿����ٶ�
		1, 0xD8F1,	 9999,		0,	// Pn239:	Pn687 ʾ��λ������[10000P]
		1, 0xD8F1,	 9999,		0,	// Pn240:	Pn688 ʾ��λ������[1P]
		2, 		0,	 	7,	  	0,	// Pn241:	Pn689 ����ģʽ�趨
		0, 		0,	 9999,	  	0,	// Pn242:	Pn690 ԭ��ع�ƫ�������� ��λ10000
		0, 		0,	 9999,	  	0,	// Pn243:	Pn691 ԭ��ع�ƫ�������� ��λ1
		0, 		0,	 	0,	  	0,	// Pn244:	Pn692 ����
		0, 		0,	 	0,	  	0,	// Pn245:	Pn693 ����
		0, 		0,	 	0,	  	0,	// Pn246:	Pn694 ����
		0, 		0,	 	0,	  	0,	// Pn247:	Pn695 ����
		0, 		0,	 	0,	  	0,	// Pn248:	Pn696 ����
		0, 		0,	 	0,	  	0,	// Pn249:	Pn697 ����
		0, 		0,	 	0,	  	0,	// Pn250:	Pn698 ����
		0, 		0,	 	0,	  	0,	// Pn251:	Pn699 ����


		3, 		0, 0x0182, 0x0162,	// Pn252:	Pn700 SCIͨѶ��ز���
									//					[hex0:ͨѶ�ٶ�ѡ��hex1:ͨѶЭ��������
									//			         hex2:ͨѶЭ��ѡ��hex3:����]
		0, 		1,    247,		1,	// Pn253:	Pn701 MODBUS���ַ
		0, 		0,	15000,	  	0,	// Pn254:	Pn702 ����
		3, 		0, 0x0015, 0x0004,	// Pn255:	Pn703 hex0:CANͨѶ��?hex1:open IP time early error
		0, 		1,	  127,	  	1,	// Pn256:	Pn704 CANͨѶ�ڵ�
		0, 		0,	 	0,	  	0,	// Pn257:	Pn705 ����
		0, 		0,	 	0,	  	0,	// Pn258:	Pn706 ����
		0, 		0,	 	0,	  	0,	// Pn259:	Pn707 ����
		0, 		0,	 	0,	  	0,	// Pn260:	Pn708 ����
		0, 		0,	 	0,	  	0,	// Pn261:	Pn709 ����
		0, 		0,	 	0,	  	0,	// Pn262:	Pn710 ����
		0, 		0,	 	0,	  	0,	// Pn263:	Pn711 ����
		0, 		0,	 	0,	  	0,	// Pn264:	Pn712 ����
		0, 		0,	 	0,	  	0,	// Pn265:	Pn713 ����
		0, 		0,	 	0,	  	0,	// Pn266:	Pn714 ����
		0, 		0,	 	0,	  	0,	// Pn267:	Pn715 ����
		0, 		0,	 	0,	  	0,	// Pn268:	Pn716 ����
		0, 		0,	 	0,	  	0,	// Pn269:	Pn717 ����
		0, 		0,	 	0,	  	0,	// Pn270:	Pn718 ����
		0, 		0,	 	0,	  	0,	// Pn271:	Pn719 ����


		0, 		0,	 4096,	 4096,	// Pn272:	Pn800 ����ǰ������4.12
		0, 		0,	 4096,	 4096,	// Pn273:	Pn801 �����Ʋ�������4.12
		0, 		0,	 5000,	  600,	// Pn274:	Pn802 异步拖动Uq幅值ֵ
		0, 		0,	30000,	  210,	// Pn275:	Pn803 �Tn
		0, 		0,	 4096,	  205,	// Pn276:	Pn804 Ku-->(220/1000(1.5Rs))*0.005*4096...其中0.005为Iqr分辨率
		0, 		0,	32767,	 6000,	// Pn277:	Pn805 Pn805 极限转速 r/min
		0, 		0,	   16,	   14,	// Pn278:	Pn806 ������

		0, 		0,	 20000,	   10,	// Pn279:	Pn807 ת��ǰ��x����
		0, 		0,	 20000,	   25,	// Pn280:
		0, 		0,	 20000,	   50,	// Pn281:
		0, 		0,	 20000,	  100,	// Pn282:
		0, 		0,	 20000,	  200,	// Pn283:
		0, 		0,	 20000,	  400,	// Pn284:
		0, 		0,	 20000,	  600,	// Pn285:
		0, 		0,	 20000,	  800,	// Pn286:
		0, 		0,	 20000,	 1000,	// Pn287:
		0, 		0,	 20000,	 1500,	// Pn288:
		0, 		0,	 20000,	 2000,	// Pn289:
		0, 		0,	 20000,	 2500,	// Pn290:
		0, 		0,	 20000,	 3000,	// Pn291:
		0, 		0,	 20000,	 4000,	// Pn292:           
		0, 		0,	 20000,	  900,	// Pn293:           
		0, 		0,	 20000,	 1000,	// Pn294:	Pn822   chxb

		0, 		0,	 4000,	   21,	// Pn295:	Pn823 ת��ǰ��y����
		0, 		0,	 4000,	   94,	// Pn296:
		0, 		0,	 4000,	  347,	// Pn297:
		0, 		0,	 4000,	  482,	// Pn298:
		0, 		0,	 4000,	  554,	// Pn299:
		0, 		0,	 4000,	  590,	// Pn300:
		0, 		0,	 4000,	  607,	// Pn301:
		0, 		0,	 4000,	  621,	// Pn302:
		0, 		0,	 4000,	  631,	// Pn303:
		0, 		0,	 4000,	  662,	// Pn304:
		0, 		0,	 4000,	  690,	// Pn305:
		0, 		0,	 4000,	  711,	// Pn306:
		0, 		0,	 4000,	  735,	// Pn307:
		0, 		0,	 4000,	  785,	// Pn308:
		0, 		0,	 4000,	  121,	// Pn309:
		0, 		0,	 4000,	  123,	// Pn310:	Pn838

		0, 		0,	 1000,	  1,	// Pn311:	Pn839 电感
	   #if ENC_TYPE == ENC17BIT
		#if DRV_TYPE == DRV_400W
		3, 0x0003, 0x0105, 0x0003,	// Pn312:	Pn840 �����������
		#elif DRV_TYPE == DRV_1KW
		3, 0x0203, 0x0505, 0x0203,	// Pn312:	Pn840 �����������
		#elif DRV_TYPE == DRV_5KW
		3, 0x0603, 0x0705, 0x0603,	// Pn312:	Pn840 �����������
		#elif DRV_TYPE == DRV_15KW
		3, 0x0803, 0x0B05, 0x0803,	// Pn312:	Pn840 �����������
		#endif

	   #elif ENC_TYPE == ENC2500
		#if DRV_TYPE == DRV_400W
		3, 0x0006, 0x0106, 0x0006,	// Pn312:	Pn840 �����������
		#elif DRV_TYPE == DRV_1KW
		3, 0x0206, 0x0506, 0x0406,	// Pn312:	Pn840 �����������
		#elif DRV_TYPE == DRV_5KW
		3, 0x0606, 0x0706, 0x0606,	// Pn312:	Pn840 �����������
		#elif DRV_TYPE == DRV_15KW
		3, 0x0806, 0x0B06, 0x0806,	// Pn312:	Pn840 �����������
		#endif
       #endif						//			hex0:����������
									//				0��������Ħ����
									//				1��ʡ�߶�Ħ����
									//				2��ʡ��SUMTAK��
									//				3������ֵ��Ħ��17λ��
									//				4��������Ħ��17λ��
									//				5: ��ת��ѹ����
									//			hex1:����
									// 			hex2:����������
		0, 		1,	32767,	   40,	// Pn313:	Pn841 增益换算系数 = 1/[(Pi/300 * J * e-4)*Iqm/Tn],Tn单位Nm,作除法
		0,      0,    50,   15,     //0, 		0,	  300,	  10,	// Pn314:	Pn842 模块电流
		0, 	  100,	 16500,	 3000,	// Pn315:	Pn843 最高转速
		0, 		1,	32767,	  303,	// Pn316:	Pn844电机本体惯量 与ACC有关
		0,      1,  3000,   500,//0, 		1,	12000,	 100,	// Pn317:	Pn845 �����而定电流额定电流     //判断过载，异步拖动后静止时用到。运转时要用到？
		0, 		1,	   28,	  	2,	// Pn318:	Pn846 极对数
		0, 	  500,	 8192,	 4096,	// Pn319:	Pn847 编码器线数
		0, 		1,	  100,	   30,	// Pn320:	Pn848  异步拖动频率
		0, 		1,	 2500,	  227,	// Pn321:	Pn849 电流采样系数	0.1mV/A
		0, 		1,	30000,	 300,	// Pn322:	Pn850 电流环增益
		0, 		0,	 1000,	   40,	// Pn323:	Pn851 电流环积分系数
		0, 		0,	 	1,	  	0,	// Pn324:	Pn852 ģ���ϵ�
		0, 		0,	65535,	3450,	// Pn325:	Pn853 ��λ
		0, 		1,	   10,	  	1,	// Pn326:	Pn854 Kisp1
		0, 	   10,	 1000,	  100,	// Pn327:	Pn855 Kisp2
		0, 		0,	 16500,	 3000,	// Pn328:	Pn856额定转速
		0,      1,   6500,   500,//0,	    1,	 6500, 	 100,	// Pn329:	 磁额定电流 好像与jgop运行有关
		0, 		0,		1,	  	1,	// Pn330:	Pn858 [0]:ȡ����ͺŲ�����ֵ��[1]ȡʵ�ʲ���ֵ
		0,      0,	 	0,	  	0,	// Pn331:	Pn859 ����
		0, 		0,	    3,	    1,	// Pn332:	Pn860 保留改为    旋变分辨率 0 =10bit,1=14bit 2=12bit 3=16bit
		0, 		0, 		3, 		1,  // Pn333:	Pn861 保留 改为  正交输出分辨率多少线  0=256线(4倍后10位）。1=4096线(4倍后14位）。2=1024线（4倍后12位）。  3= 16384 （4倍后16位65536）
		0, 		0,	 	0,		0,	// Pn334:	Pn862 ����
		0, 		0,	 	0,		0,	// Pn335:	Pn863 ����


		0, 		0,	 	0,		0,	// Pn336:	Pn864 ����
		0, 		0,	 	1,		0,	// Pn337:	Pn865 ����	flags
		0,		1,  65535,		1,	// Pn338:	Pn866 ����	Geer NumL
		0,      0,	65535,	  	0,	// Pn339:	Pn867 ����	Geer NumH
		0, 		1,	65535,	    1,	// Pn340:	Pn868 ����	Geer DivL
		0, 		0, 	65535, 		0,  // Pn341:	Pn869 ����	Geer DivH
		0, 		0,	 	0,		0,	// Pn342:	Pn870 ����	Home_offsetL
		0, 		0,	 	0,		0,	// Pn343:	Pn871 ����	Home_offsetH
		0, 		0,	 	0,		0,	// Pn344:	Pn872 ���� home position low  encoder sigle position
		0, 		0,	 	0,		0,	// Pn345:	Pn873 ���� home position high encoder

		1, 0xFC00,   1024,      0,  // AnalogOffset1    //Pn346
		1, 0xFC00,   1024,      0,  // AnalogOffset2     //Pn347
		1, 0xFC00,   1024,      0,  // CurrentOffset1    //Pn348   IuOffset
		1, 0xFC00,   1024,      0,  // CurrentOffset2    //Pn348   IvOffset
		0, 		0,		0,      0  	// CurrentOffset2
};

const int sintab[] =
{
	  0,// 0
	  71,// 1
	  143,// 2
	  214,// 3
	  286,// 4
	  357,// 5
	  428,// 6
	  499,// 7
	  570,// 8
	  641,// 9
	  711,// 10
	  782,// 11
	  852,// 12
	  921,// 13
	  991,// 14
	  1060,// 15
	  1129,// 16
	  1198,// 17
	  1266,// 18
	  1334,// 19
	  1401,// 20
	  1468,// 21
	  1534,// 22
	  1600,// 23
	  1666,// 24
	  1731,// 25
	  1796,// 26
	  1860,// 27
	  1923,// 28
	  1986,// 29
	  2048,// 30
	  2110,// 31
	  2171,// 32
	  2231,// 33
	  2290,// 34
	  2349,// 35
	  2408,// 36
	  2465,// 37
	  2522,// 38
	  2578,// 39
	  2633,// 40
	  2687,// 41
	  2741,// 42
	  2793,// 43
	  2845,// 44
	  2896,// 45
	  2946,// 46
	  2996,// 47
	  3044,// 48
	  3091,// 49
	  3138,// 50
	  3183,// 51
	  3228,// 52
	  3271,// 53
	  3314,// 54
	  3355,// 55
	  3396,// 56
	  3435,// 57
	  3474,// 58
	  3511,// 59
	  3547,// 60
	  3582,// 61
	  3617,// 62
	  3650,// 63
	  3681,// 64
	  3712,// 65
	  3742,// 66
	  3770,// 67
	  3798,// 68
	  3824,// 69
	  3849,// 70
	  3873,// 71
	  3896,// 72
	  3917,// 73
	  3937,// 74
	  3956,// 75
	  3974,// 76
	  3991,// 77
	  4006,// 78
	  4021,// 79
	  4034,// 80
	  4046,// 81
	  4056,// 82
	  4065,// 83
	  4074,// 84
	  4080,// 85
	  4086,// 86
	  4090,// 87
	  4094,// 88
	  4095,// 89
	  4096,// 90
	  4095,// 91
	  4094,// 92
	  4090,// 93
	  4086,// 94
	  4080,// 95
	  4074,// 96
	  4065,// 97
	  4056,// 98
	  4046,// 99
	  4034,// 100
	  4021,// 101
	  4006,// 102
	  3991,// 103
	  3974,// 104
	  3956,// 105
	  3937,// 106
	  3917,// 107
	  3896,// 108
	  3873,// 109
	  3849,// 110
	  3824,// 111
	  3798,// 112
	  3770,// 113
	  3742,// 114
	  3712,// 115
	  3681,// 116
	  3650,// 117
	  3617,// 118
	  3582,// 119
	  3547,// 120
	  3511,// 121
	  3474,// 122
	  3435,// 123
	  3396,// 124
	  3355,// 125
	  3314,// 126
	  3271,// 127
	  3228,// 128
	  3183,// 129
	  3138,// 130
	  3091,// 131
	  3044,// 132
	  2996,// 133
	  2946,// 134
	  2896,// 135
	  2845,// 136
	  2793,// 137
	  2741,// 138
	  2687,// 139
	  2633,// 140
	  2578,// 141
	  2522,// 142
	  2465,// 143
	  2408,// 144
	  2349,// 145
	  2290,// 146
	  2231,// 147
	  2171,// 148
	  2110,// 149
	  2048,// 150
	  1986,// 151
	  1923,// 152
	  1860,// 153
	  1796,// 154
	  1731,// 155
	  1666,// 156
	  1600,// 157
	  1534,// 158
	  1468,// 159
	  1401,// 160
	  1334,// 161
	  1266,// 162
	  1198,// 163
	  1129,// 164
	  1060,// 165
	  991,// 166
	  921,// 167
	  852,// 168
	  782,// 169
	  711,// 170
	  641,// 171
	  570,// 172
	  499,// 173
	  428,// 174
	  357,// 175
	  286,// 176
	  214,// 177
	  143,// 178
	  71,// 179
	  0,// 180
	  -71,// 181
	  -143,// 182
	  -214,// 183
	  -286,// 184
	  -357,// 185
	  -428,// 186
	  -499,// 187
	  -570,// 188
	  -641,// 189
	  -711,// 190
	  -782,// 191
	  -852,// 192
	  -921,// 193
	  -991,// 194
	  -1060,// 195
	  -1129,// 196
	  -1198,// 197
	  -1266,// 198
	  -1334,// 199
	  -1401,// 200
	  -1468,// 201
	  -1534,// 202
	  -1600,// 203
	  -1666,// 204
	  -1731,// 205
	  -1796,// 206
	  -1860,// 207
	  -1923,// 208
	  -1986,// 209
	  -2048,// 210
	  -2110,// 211
	  -2171,// 212
	  -2231,// 213
	  -2290,// 214
	  -2349,// 215
	  -2408,// 216
	  -2465,// 217
	  -2522,// 218
	  -2578,// 219
	  -2633,// 220
	  -2687,// 221
	  -2741,// 222
	  -2793,// 223
	  -2845,// 224
	  -2896,// 225
	  -2946,// 226
	  -2996,// 227
	  -3044,// 228
	  -3091,// 229
	  -3138,// 230
	  -3183,// 231
	  -3228,// 232
	  -3271,// 233
	  -3314,// 234
	  -3355,// 235
	  -3396,// 236
	  -3435,// 237
	  -3474,// 238
	  -3511,// 239
	  -3547,// 240
	  -3582,// 241
	  -3617,// 242
	  -3650,// 243
	  -3681,// 244
	  -3712,// 245
	  -3742,// 246
	  -3770,// 247
	  -3798,// 248
	  -3824,// 249
	  -3849,// 250
	  -3873,// 251
	  -3896,// 252
	  -3917,// 253
	  -3937,// 254
	  -3956,// 255
	  -3974,// 256
	  -3991,// 257
	  -4006,// 258
	  -4021,// 259
	  -4034,// 260
	  -4046,// 261
	  -4056,// 262
	  -4065,// 263
	  -4074,// 264
	  -4080,// 265
	  -4086,// 266
	  -4090,// 267
	  -4094,// 268
	  -4095,// 269
	  -4096,// 270
	  -4095,// 271
	  -4094,// 272
	  -4090,// 273
	  -4086,// 274
	  -4080,// 275
	  -4074,// 276
	  -4065,// 277
	  -4056,// 278
	  -4046,// 279
	  -4034,// 280
	  -4021,// 281
	  -4006,// 282
	  -3991,// 283
	  -3974,// 284
	  -3956,// 285
	  -3937,// 286
	  -3917,// 287
	  -3896,// 288
	  -3873,// 289
	  -3849,// 290
	  -3824,// 291
	  -3798,// 292
	  -3770,// 293
	  -3742,// 294
	  -3712,// 295
	  -3681,// 296
	  -3650,// 297
	  -3617,// 298
	  -3582,// 299
	  -3547,// 300
	  -3511,// 301
	  -3474,// 302
	  -3435,// 303
	  -3396,// 304
	  -3355,// 305
	  -3314,// 306
	  -3271,// 307
	  -3228,// 308
	  -3183,// 309
	  -3138,// 310
	  -3091,// 311
	  -3044,// 312
	  -2996,// 313
	  -2946,// 314
	  -2896,// 315
	  -2845,// 316
	  -2793,// 317
	  -2741,// 318
	  -2687,// 319
	  -2633,// 320
	  -2578,// 321
	  -2522,// 322
	  -2465,// 323
	  -2408,// 324
	  -2349,// 325
	  -2290,// 326
	  -2231,// 327
	  -2171,// 328
	  -2110,// 329
	  -2048,// 330
	  -1986,// 331
	  -1923,// 332
	  -1860,// 333
	  -1796,// 334
	  -1731,// 335
	  -1666,// 336
	  -1600,// 337
	  -1534,// 338
	  -1468,// 339
	  -1401,// 340
	  -1334,// 341
	  -1266,// 342
	  -1198,// 343
	  -1129,// 344
	  -1060,// 345
	  -991,// 346
	  -921,// 347
	  -852,// 348
	  -782,// 349
	  -711,// 350
	  -641,// 351
	  -570,// 352
	  -499,// 353
	  -428,// 354
	  -357,// 355
	  -286,// 356
	  -214,// 357
	  -143,// 358
	  -71,// 359
	  0	  // 0
};

const Uint16 RigidityGain[16]=
{
	10,			// 0
	15,			// 1
	20,			// 2
	25,			// 3
	30,			// 4
	40,			// 5
	65,			// 6
	80,			// 7
	100,		// 8
	120,		// 9
	140,		// 10
	160,		// 11
	180,		// 12
	210,		// 13
	250,		// 14
	300			// 15
};

const Uint16 RigidityTi[16]=
{
	800,		// 0
	600,		// 1
	450,		// 2
	400,		// 3
	300,		// 4
	200,		// 5
	140,		// 6
	110,		// 7
	 90,		// 8
	 80,		// 9
	 70,		// 10
	 60,		// 11
	 55,		// 12
	 50,		// 13
	 40,		// 14
	 30			// 15			
};

const Uint16 DrivePar1[] =		// Pn849 ��������ϵ��
{
	#if	AC_VOLT == AC_200V
	1040,	// 02
	1040,	// 04
	560,	// 08
	560,	// 10
	240,	// 15
	240,	// 20
	125,	// 30
	125,	// 50
	150,	// [--]
	150,	// [--]
	150,	// [--]
	100		// [--]
	#elif	AC_VOLT == AC_400V
	1040,	// [--]
	1040,	// [--]
	1040,	// [--]
	1040,	// 10
	800,	// 15
	560,	// 20
	250,	// 30
	250,	// 50
	100,	// 75
	100,	// 1A
	150,	// 1E
	100		// 2B
	#endif
};

const Uint16 MotorPar1[][4][7]= 
{// 800  801 802 803 804 805 806
{//�������ͺţ�[ 0 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,6,1905,5900,16,		// 0  []
	4096,4096,800,48,106,3700,16,		// 1  []
	4096,4096,800,72,89,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,800,6,2500,5900,16,		// 0  EMJ-02ASA����
	4096,4096,800,48,106,3700,16,		// 1  []
	4096,4096,800,72,89,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#endif
},
{//�������ͺţ�[ 1 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,13,799,5900,16,		// 0  []
	4096,4096,800,48,106,3700,16,		// 1  []
	4096,4096,800,72,89,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,800,13,1219,5900,16,		// 0  EMJ-04ASA����
	4096,4096,800,13,1219,5900,16,		// 1  EMJ-04APH����
	4096,4096,800,72,89,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#endif
},
{//�������ͺţ�[ 2 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,24,367,5800,16,		// 0  []
	4096,4096,800,48,106,3700,16,		// 1  []
	4096,4096,800,72,89,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,800,24,367,5800,16,		// 0  EMJ-08ASA����
	4096,4096,800,48,106,3700,16,		// 1  []
	4096,4096,800,72,89,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#endif
},
{//�������ͺţ�[ 3 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,32,255,5800,16,		// 0  []
	4096,4096,400,48,300,3600,16,		// 1  EMG-10DSA����
	4096,4096,400,96,440,1900,16,		// 2  EML-10DSA����
	4096,4096,800,96,75,3700,16			// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,800,32,369,5800,16,		// 0  EMJ-10ASA����
	4096,4096,800,48,177,3700,16,		// 1  EMG-10ASA����
	4096,4096,800,96,295,1700,16,		// 2  EML-10ASA����
	4096,4096,800,96,75,3700,16			// 3  []
	#endif
},
{//�������ͺţ�[ 4 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,24,367,5800,16,		// 0  []
	4096,4096,400,72,170,3700,16,		// 1  EMG-15DSA����
	4096,4096,800,48,106,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,800,24,367,5800,16,		// 0  []
	4096,4096,800,72,111,3700,16,		// 1  EMG-15ASA����
	4096,4096,800,48,106,3700,16,		// 2  []
	4096,4096,800,96,75,3700,16			// 3  []
	#endif
},
{//�������ͺţ�[ 5 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,24,367,5800,16,		// 0  []
	4096,4096,800,96,144,3550,16,		// 1  EMG-20DSA����
	4096,4096,800,191,205,1850,16,		// 2  EML-20DSA����
	4096,4096,800,96,75,3700,16			// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,800,24,367,5800,16,		// 0  []
	4096,4096,800,96,80, 3577,16,		// 1  EMG-20ASA����   chxb
	4096,4096,800,191,90,2000,16,		// 2  EML-20ASA����   chxb
	4096,4096,800,96,75,3700,16			// 3  []
	#endif
},
{//�������ͺţ�[ 6 ]
	#if AC_VOLT == AC_400V
	4096,4096,600,24,367,5800,16,		// 0  []
	4096,4096,600,143,246,3700,16,		// 1  EMG-30DSA����
	4096,4096,600,287,246,1850,16,		// 2  EML-30DSA����
	4096,4096,600,160,517,3100,16		// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,600,24,367,5800,16,		// 0  []
	4096,4096,600,143,131,3700,16,		// 1  EMG-30ASA���� chxb
	4096,4096,600,287,125,1760,16,		// 2  EML-30ASA���� chxb
	4096,4096,600,160,517,3100,16		// 3  []
	#endif
},
{//�������ͺţ�[ 7 ]
	#if AC_VOLT == AC_400V
	4096,4096,600,24,367,5800,16,		// 0  []
	4096,4096,600,239,61,3700,16,		// 1  EMG-50DSA����
	4096,4096,600,382,164,1800,16,		// 2  EML-40DSA����
	4096,4096,600,318,124,2700,16		// 3  []
	#elif AC_VOLT == AC_200V
	4096,4096,600,24,367,5800,16,		// 0  []
	4096,4096,600,239,105,3800,16,		// 1  EMG-50ASA���� chxb
	4096,4096,600,382,113,1788,16,		// 2  EML-40ASA���� chxb
	4096,4096,600,318,124,2700,16		// 3  []
	#endif
},
{//�������ͺţ�[ 8 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,450,122,2498,16,		// 0  []
	4096,4096,800,500,276,2840,16,		// 1  []
	4096,4096,800,700,310,1600,16,		// 2  EML-75APA����
	4096,4096,800,478,57,2300,16		// 3  EMB-75DSA����
	#elif AC_VOLT == AC_200V
	4096,4096,800,450,122,2498,16,		// 0  []
	4096,4096,800,500,276,2840,16,		// 1  []
	4096,4096,800,96,75,3700,16,		// 2  []
	4096,4096,800,478,57,2300,16		// 3  []
	#endif
},
{//�������ͺţ�[ 9 ]
	#if AC_VOLT == AC_400V
	4096,4096,800,900,247,1980,16,		// 0  []
	4096,4096,800,700,4,2498,16,		// 1  []
	4096,4096,800,450,145,3744,16,		// 2  []
	4096,4096,800,700,200,2350,16,		// 3  EMB-1ADSA����
	#elif AC_VOLT == AC_200V
	4096,4096,800,900,247,1980,16,		// 0  []
	4096,4096,800,700,4,2498,16,		// 1  []
	4096,4096,800,450,145,3744,16,		// 2  []
	4096,4096,800,700,200,2350,16,		// 3  []
	#endif
},
{//�������ͺţ�[ A ]
	#if AC_VOLT == AC_400V
	4096,4096,800,900,247,1980,16,		// 0
	4096,4096,800,716,170,2786,16,		// 1  EMG-1EDSA����
	4096,4096,800,450,145,3744,16,		// 2
	4096,4096,800,955,37,2300,16,		// 3  EMB-1EDSA����
	#elif AC_VOLT == AC_200V
	4096,4096,800,900,247,1980,16,		// 0  []
	4096,4096,800,716,170,2786,16,		// 1  []
	4096,4096,800,450,145,3744,16,		// 2  []
	4096,4096,800,955,37,2300,16,		// 3  []
	#endif
},
{//�������ͺţ�[ B ]
	#if AC_VOLT == AC_400V
	4096,4096,800,900,247,1980,16,		// 0  []
	4096,4096,800,700,4,2498,16,		// 1  []
	4096,4096,800,450,145,3744,16,		// 2  []
	4096,4096,800,1400,90,2250,16,		// 3  EMB-2BDSA����
	#elif AC_VOLT == AC_200V
	4096,4096,800,900,247,1980,16,		// 0  []
	4096,4096,800,700,4,2498,16,		// 1  []
	4096,4096,800,450,145,3744,16,		// 2  []
	4096,4096,800,1400,90,2250,16,		// 3  []
	#endif
}
};

const Uint16 MotorPar2[][4][16]=
{
{//�������ͺţ�[ 0 ]
	#if AC_VOLT == AC_400V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  []
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 1  []
	5,10,15, 20,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#elif AC_VOLT == AC_200V
	15,20,25,30,35,40,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  EMJ-02ASA����
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 1  []
	5,10,15, 20,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#endif
},
{//�������ͺţ�[ 1 ]
	#if AC_VOLT == AC_400V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  []
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 1  []
	5,10,15, 20,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#elif AC_VOLT == AC_200V
	15,20,25,30,35,40,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  EMJ-04ASA����
	15,20,25,30,35,40,50,100,200,400,600,800,1000,1200,1400,1600,		// 1  EMJ-04APH����
	5,10,15, 20,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#endif
},
{//�������ͺţ�[ 2 ]
	#if AC_VOLT == AC_400V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  []
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 1  []
	5,10,15, 20,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#elif AC_VOLT == AC_200V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  EMJ-08ASA����
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 1  []
	5,10,15, 20,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#endif
},
{//�������ͺţ�[ 3 ]
	#if AC_VOLT == AC_400V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  []
    10,20,30,50,100,200,400,800,1000,1200,1500,1800,2000,2500,3000,3600,// 1  EMG-10DSA����
	10,20,30,50,100,200,400,800,1000,1200,1500,1800,2000,2500,3000,3600,// 2  EML-10DSA����
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#elif AC_VOLT == AC_200V
	15,20,25,30,35,40,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  EMJ-10ASA����
    15,20,30,50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 1  EMG-10ASA����
	15,20,25,30,35,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 2  EML-10ASA����
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#endif
},
{//�������ͺţ�[ 4 ]
	#if AC_VOLT == AC_400V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  []
	10,25,50,100,250,500,750,1000,1500,2000,2500,3000,4000,4500,5000,5500,// 1  EMG-15DSA����
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#elif AC_VOLT == AC_200V
	5,10,15, 20,25,30,50,100,200,400,600,800,1000,1200,1400,1600,		// 0  []
	15,20,25,30,35,40,50,100,200,400,800,1200,1600,2000,2400,4800,		// 1  EMG-15ASA����
	5,10,20, 50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,5600,	// 2  []
	5,10,15, 30,50,100,200,400,800,1200,2000,2800,3600,4800,5600,6500	// 3  []
	#endif
},
{//�������ͺţ�[ 5 ]
	#if AC_VOLT == AC_400V
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200,			// 0  []
	10,25,50,100,200,450,750,1000,1500,2000,2500,3000,4000,5000,6000,7000,	// 1  EMG-20DSA����
	10,25,50,100,200,450,750,1000,1500,2000,2500,3000,4000,5000,6000,7000,	// 2  EML-20DSA����
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200				// 3  []
	#elif AC_VOLT == AC_200V
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200,			// 0  []
	50,100,200,400,600,800,1000,2000,3000,4000,5000,6000,7000,8000,10000,12000,		// 1  EMG-20ASA����   chxb
	100,200,400,600,800,1000,1500,2000,3000,4000,4500,6000,8500,10000,12000,13500,	// 2  EML-20ASA����  chxb
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200				// 3  []
	#endif
},
{//�������ͺţ�[ 6 ]
	#if AC_VOLT == AC_400V
	10,15,20,25,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,			// 0  []
	30,50,100,200,400,600,800,1000,1200,1600,2000,2500,3000,3500,4000,5000,	// 1  EMG-30DSA����
	30,50,100,200,400,600,800,1000,1200,1600,2000,2500,3000,3500,4000,5000,	// 2  EML-30DSA����
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200				// 3  []
	#elif AC_VOLT == AC_200V
	10,15,20,25,30,40,50,100,200,400,800,1200,1600,2000,2400,4800,			// 0  []
	50,100,200,400,600,800,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,			// 1  EMG-30ASA����  chxb
	50,100,200,400,600,800,1000,2000,3000,4000,5000,6000,7000,8000,9000,9300,			// 2  EML-30ASA����  chxb
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200				// 3  []
	#endif
},
{//�������ͺţ�[ 7 ]
	#if AC_VOLT == AC_400V
	10,20,50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,3200,5800,	// 0  []
	50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,7000,9000,// 1  EMG-50DSA����
	10,25,50,100,200,450,750,1000,1500,2000,2500,3000,4000,5000,6000,7000,	// 2  EML-40DSA����
	30,50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,3200,4000,5600	// 3  []
	#elif AC_VOLT == AC_200V
	10,20,50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,3200,5800,	// 0  []
	50,100,200,400,600,800,1000,2000,3000,4000,6000,8000,10000,13000,15000,15800,	// 1  EMG-50ASA����  chxb
	25,50,100,200,400,800,1200,1600,2000,2400,3200,4000,4800,5600,6400,11600,	// 2  EML-40ASA����  chxb
	30,50,100,200,400,600,800,1000,1200,1600,2000,2400,2800,3200,4000,5600	// 3  []
	#endif
},
{//�������ͺţ�[ 8 ]
	#if AC_VOLT == AC_400V
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	// 0  []
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000,		// 1  []
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	// 2  EML-75APA����
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000		// 3  EMB-75DSA����
	#elif AC_VOLT == AC_200V
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	// 0  []
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000,		// 1  []
	5,10,15,20,25,30,50,100,200,400,600,800,1000,1200,1600,3200,			// 2  []
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000		// 3  []
	#endif
},
{//�������ͺţ�[ 9 ]
	#if AC_VOLT == AC_400V
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2700,5400,		// 0  []
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	// 1  []
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2900,5800,		// 2  []
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000		// 3  EMB-1ADSA����
	#elif AC_VOLT == AC_200V
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2700,5400,		// 0  []
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	// 1  []
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2900,5800,		// 2  [] 
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000		// 3  []
	#endif
},
{//�������ͺţ�[ A ]
	#if AC_VOLT == AC_400V
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2700,5400,		 // 0  []
	25,50,100,200,500,1000,1500,2000,2500,3000,3500,4000,4500,5000,6000,7000,// 1  EMG-1EDSA����
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2900,5800,		 // 2  []
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000		 // 3  EMB-1EDSA����
	#elif AC_VOLT == AC_200V
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2700,5400,		 // 0  []
	25,50,100,200,500,1000,1500,2000,2500,3000,3500,4000,4500,5000,6000,7000,// 1  []
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2900,5800,		 // 2  []
	10,15,20,25,30,50,100,200,500,1000,1500,2000,2500,3000,4000,5000		 // 3  []
	#endif
},
{//�������ͺţ�[ B ]
	#if AC_VOLT == AC_400V
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2700,5400,		 // 0  []
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	 // 1  []
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2900,5800,		 // 2  []
	25,50,100,200,400,600,1000,1500,2000,3000,4000,5000,6000,7000,8000,10000,// 3  EMB-2BDSA����
	#elif AC_VOLT == AC_200V
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2700,5400,		 // 0  []
	10,25,50,100,200,400,600,800,1000,1500,2000,2500,3000,4000,5000,6000,	 // 1  []
	5,10,15,30,50,100,200,400,600,800,1200,1600,2000,2400,2900,5800,		 // 2  []
	25,50,100,200,400,600,1000,1500,2000,3000,4000,5000,6000,7000,8000,10000,// 3  []
	#endif
}
};

const Uint16 MotorPar3[][4][16]=
{
{//�������ͺţ�[ 0 ]
	#if AC_VOLT == AC_400V
	34,57,292,347,386,413,449,531,622,752,862,968,1071,1181,1294,1449,	// 0  []
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 1  []
	23,36,79,101,161,208,244,353,469,515,541,556,572,582,596,648,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#elif AC_VOLT == AC_200V
	34,57,292,347,386,413,449,531,622,752,862,968,1071,1181,1294,1449,	// 0  EMJ-02ASA����
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 1  []
	23,36,79,101,161,208,244,353,469,515,541,556,572,582,596,648,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#endif
},
{//�������ͺţ�[ 1 ]
	#if AC_VOLT == AC_400V
	192,234,256,287,308,327,362,463,532,622,685,744,794,847,901,959,	// 0  []
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 1  []
	23,36,79,101,161,208,244,353,469,515,541,556,572,582,596,648,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#elif AC_VOLT == AC_200V
	192,234,256,287,308,327,362,463,532,622,685,744,794,847,901,959,	// 0  EMJ-04ASA����
	192,234,256,287,308,327,362,463,532,622,685,744,794,847,901,959,	// 1  EMJ-04APH����
	23,36,79,101,161,208,244,353,469,515,541,556,572,582,596,648,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#endif
},
{//�������ͺţ�[ 2 ]
	#if AC_VOLT == AC_400V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 1  []
	23,36,79,101,161,208,244,353,469,515,541,556,572,582,596,648,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#elif AC_VOLT == AC_200V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  EMJ-08ASA����
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 1  []
	23,36,79,101,161,208,244,353,469,515,541,556,572,582,596,648,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#endif
},
{//�������ͺţ�[ 3 ]
	#if AC_VOLT == AC_400V
	41,169,233,273,299,319,353,451,516,558,597,618,638,654,674,691,		// 0  [] 
	15,22,27,38,85,230,367,452,478,498,528,550,566,605,640,680,			// 1  EMG-10DSA����
	10,15,19,33,60,149,307,445,483,511,551,592,611,673,719,780,			// 2  EML-10DSA����
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#elif AC_VOLT == AC_200V
	41,169,233,273,299,319,353,451,516,558,597,618,638,654,674,691,		// 0  EMJ-10ASA����
	204,239,285,350,445,514,534,558,580,597,607,627,646,665,683,803,	// 1  EMG-10ASA����
	39,144,214,257,287,309,343,445,515,554,603,633,663,692,719,883,		// 2  EML-10ASA����
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#endif
},
{//�������ͺţ�[ 4 ]
	#if AC_VOLT == AC_400V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	10,14,34,74,193,330,400,432,475,500,530,554,595,615,635,655,		// 1  EMG-15DSA����
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#elif AC_VOLT == AC_200V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	51,167,229,268,294,315,348,443,510,532,567,588,604,614,627,696,		// 1  EMG-15ASA����
	36,64,118,268,413,491,529,542,555,564,573,587,600,609,621,694,		// 2  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#endif
},
{//�������ͺţ�[ 5 ]
	#if AC_VOLT == AC_400V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	15,26,30,60,133,292,387,420,454,480,510,525,570,610,635,665,		// 1  EMG-20DSA����
	2,13,21,49,116,275,382,424,463,513,542,574,630,680,730,776,     	// 2  EML-20DSA����
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#elif AC_VOLT == AC_200V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	84,180,376,448,485,501,516,548,562,583,588,610,623,642,666,702,		// 1  EMG-20ASA���� chxb
	20,65,417,458,474,520,546,584,612,628,662,682,752,782,828,858,	// 2  EML-20ASA����  chxb
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664		// 3  []
	#endif
},
{//�������ͺţ�[ 6 ]
	#if AC_VOLT == AC_400V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	32,74,175,350,478,523,548,564,578,605,630,665,690,720,747,806,		// 1  EMG-30DSA����
	59,87,166,304,451,510,535,556,570,600,624,656,680,706,735,789,		// 2  EML-30DSA����
	27,64,114,163,222,272,401,517,581,624,654,688,711,733,782,984		// 3  []
	#elif AC_VOLT == AC_200V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	209,371,526,586,609,625,638,688,736,777,813,849,884,920,943,980,	// 1  EMG-30ASA����   chxb
	172,338,507,576,598,614,624,666,707,741,773,803,831,862,892,900,		// 2  EML-30ASA����   chxb
	27,64,114,163,222,272,401,517,581,624,654,688,711,733,782,984		// 3  []
	#endif
},
{//�������ͺţ�[ 7 ]
	#if AC_VOLT == AC_400V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	17,75,221,405,462,495,515,547,560,580,604,615,640,678,684,720,		// 1  EMG-50DSA����
	1,24,51,109,217,406,493,523,547,573,591,618,654,685,722,760,		// 2  EML-40DSA����
	22,74,445,550,593,610,620,629,638,658,675,692,706,718,745,806		// 3  []
	#elif AC_VOLT == AC_200V
	110,151,190,221,248,268,343,453,519,562,586,612,631,651,671,689,	// 0  []
	121,340,512,579,599,612,622,661,676,699,746,778,811,883,1000,1100,	// 1  EMG-50ASA����  chxb
	78,152,336,508,575,608,629,640,655,666,689,716,735,756,773,889,		// 2  EML-40ASA����  chxb
	22,74,445,550,593,610,620,629,638,658,675,692,706,718,745,806		// 3  []
	#endif
},
{//�������ͺţ�[ 8 ]
	#if AC_VOLT == AC_400V
	11,20,61,174,317,430,476,501,522,563,601,615,720,738,794,824,		// 0  []
	12,15,17,18,20,32,84,205,382,460,506,540,575,608,665,800,			// 3  []
	36,46,65,121,252,425,508,553,589,661,718,766,843,910,992,1068,		// 2  EML-75APA����(5K)
	14,17,18,19,20,35,102,226,393,474,522,562,606,657,788,822			// 3  EMB-75DSA����
	#elif AC_VOLT == AC_200V
	11,20,61,174,317,430,476,501,522,563,601,615,720,738,794,824,		// 0  []
	12,15,17,18,20,32,84,205,382,460,506,540,575,608,665,800,			// 3  []
	20,41,73,136,238,358,455,516,541,551,576,598,614,633,648,664,		// 2  []
	14,17,18,19,20,35,102,226,393,474,522,562,606,657,788,822			// 3  []
	#endif
},
{//�������ͺţ�[ 9 ]
	#if AC_VOLT == AC_400V
	9,11,13,22,52,139,283,416,467,494,525,562,590,611,620,782,			// 0  []
	11,19,50,134,278,410,458,482,498,530,555,578,601,619,725,726,		// 1  []
	9,11,14,25,57,139,274,413,468,495,527,564,595,613,716,819,			// 2  []
	13,16,17,18,19,33,85,207,373,450,488,518,543,569,622,661,			// 3  EMB-1ADSA����
	#elif AC_VOLT == AC_200V
	9,11,13,22,52,139,283,416,467,494,525,562,590,611,620,782,			// 0  []
	11,19,50,134,278,410,458,482,498,530,555,578,601,619,725,726,		// 1  []
	9,11,14,25,57,139,274,413,468,495,527,564,595,613,716,819,			// 2  []
	13,16,17,18,19,33,85,207,373,450,488,518,543,569,622,661,			// 3  []
	#endif
},
{//�������ͺţ�[ A ]
	#if AC_VOLT == AC_400V
	9,11,13,22,52,139,283,416,467,494,525,562,590,611,620,782,			// 0  []
	16,26,80,222,413,505,548,577,600,622,645,678,695,712,751,803,		// 1  EMG-1EDSA����
	9,11,14,25,57,139,274,413,468,495,527,564,595,613,716,819,			// 2  []
	13,15,17,18,20,31,83,205,371,442,476,504,524,545,586,636			// 3  EMB-1EDSA����
	#elif AC_VOLT == AC_200V
	9,11,13,22,52,139,283,416,467,494,525,562,590,611,620,782,			// 0  []
	16,26,80,222,413,505,548,577,600,622,645,678,695,712,751,803,		// 1  []
	9,11,14,25,57,139,274,413,468,495,527,564,595,613,716,819,			// 2  []
	13,15,17,18,20,31,83,205,371,442,476,504,524,545,586,636			// 3  []
	#endif
},
{//�������ͺţ�[ B ]
	#if AC_VOLT == AC_400V
	9,11,13,22,52,139,283,416,467,494,525,562,590,611,620,782,			// 0  []
	11,19,50,134,278,410,458,482,498,530,555,578,601,619,725,726,		// 1  []
	9,11,14,25,57,139,274,413,468,495,527,564,595,613,716,819,			// 2  []
	34,40,56,111,260,360,470,534,570,612,647,675,702,726,746,787,		// 3  EMB-2BDSA����
	#elif AC_VOLT == AC_200V
	9,11,13,22,52,139,283,416,467,494,525,562,590,611,620,782,			// 0  []
	11,19,50,134,278,410,458,482,498,530,555,578,601,619,725,726,		// 1  []
	9,11,14,25,57,139,274,413,468,495,527,564,595,613,716,819,			// 2  []
	34,40,56,111,260,360,470,534,570,612,647,675,702,726,746,787,		// 3  []
	#endif
}
};

const Uint16 MotorPar4[][4][14]=
{
{//�������ͺţ�[ 0 ]
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	5089, 12,   4500, 2,   	140,  4,    2500, 30,   1490, 3000,	0,    20,   113,  93,		// 0  []
	132,  12,   3000, 102,  600,  4,    2500, 30,   1490, 2000,	0,    0,    600,  0,		// 1  []
	89,	  12,   3000, 152,  900,  4,    2500, 30,   1490, 2000,	0,    0,    900,  0,		// 2  []
	66,   12,   3000, 202,  1200, 4,    2500, 30,   1490, 2000,	0,    0,    1200, 0			// 3  []
	#elif AC_VOLT == AC_200V
	5089, 12,   4500, 2,   	140,  4,    2500, 30,   1490, 3000,	25000,20,   113,  93,		// 0  EMJ-02ASA����
	132,  12,   3000, 102,  600,  4,    2500, 30,   1490, 2000,	0,    0,    600,  0,		// 1  []
	89,	  12,   3000, 152,  900,  4,    2500, 30,   1490, 2000,	0,    0,    900,  0,		// 2  []
	66,   12,   3000, 202,  1200, 4,    2500, 30,   1490, 2000,	0,    0,    1200, 0			// 3  []
	#endif
},
{//�������ͺţ�[ 1 ]
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	3046, 12,   4500, 3,   	280,  4,    2500, 30,   1490, 3000, 0,	  20,   225,   53,		// 0  []
	132,  12,   3000, 102,  600,  4,    2500, 30,   1490, 2000, 0,    0,    600,   0,		// 1  []
	89,   12,   3000, 152,  900,  4,    2500, 30,   1490, 2000, 0,    0,    900,   0,		// 2  []
	66,   12,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200,  0		// 3  []
	#elif AC_VOLT == AC_200V
	3046, 12,   4500, 3,   	280,  4,    2500, 30,   1490, 3000, 14000,20,   225,   53,		// 0  EMJ-04ASA����
	1131, 12,   4500,  7,   280,  4,    2500, 30,   1490, 3000, 14000,20,  225,   53,		// 1  EMJ-04APH����
	89,   12,   3000, 152,  900,  4,    2500, 30,   1490, 2000, 0,    0,    900,   0,		// 2  []
	66,   12,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200,  0		// 3  []
	#endif
},
{//�������ͺţ�[ 2 ]PRONET-08A ��A
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	965,  26,   4500, 13,   400,  4,    2500, 30,   1490, 3000, 0, 	  5,    323,  78,		// 0  []
	132,  26,   3000, 102,  600,  4,    2500, 30,   1490, 2000, 0,    0,    600,  0,		// 1  []
	89,   26,   3000, 152,  900,  4,    2500, 30,   1490, 2000, 0,    0,    900,  0,		// 2  []
	66,   26,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0			// 3  []
	#elif AC_VOLT == AC_200V
	965,  16,   4500, 13,   400,  4,    2500, 30,   1490, 3000, 5000, 5,    323,  78,		// 0  EMJ-08APA����
	132,  26,   3000, 102,  600,  4,    2500, 30,   1490, 2000, 0,    0,    600,  0,		// 1  []
	89,   26,   3000, 152,  900,  4,    2500, 30,   1490, 2000, 0,    0,    900,  0,		// 2  []
	66,   26,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0			// 3  []
	#endif
},
{//�������ͺţ�[ 3 ]PRONET-10A ��A
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	726,  26,   4500, 17,   530,  4,    2500, 30,   1490, 3000, 0, 	  10,   438,  56,		// 0  [] 
	270,  14,   3000, 100,  320,  4,    2500, 30,   1490, 2000, 9000, 15,   320,  50,		// 1  EMG-10DSA����
	265,  14,   1500, 190,  320,  4,    2500, 30,   1490, 1000, 20000,70,   320,  53,		// 2  EML-10DSA����
	66,   26,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0, 	   0,   1200, 0			// 3  []
	#elif AC_VOLT == AC_200V
	726,  24,   4500, 17,   530,  4,    2500, 30,   1490, 3000, 3000, 10,   438,  56,		// 0  EMJ-10ASA����
	174,  24,   3000, 100,  550,  4,    2500, 30,   1490, 2000, 6000, 15,   467,  28,		// 1  EMG-10ASA����
	185,  24,   1500, 190,  540,  4,    2500, 30,   1490, 1000, 8000, 20,   459,  53,		// 2  EML-10ASA����
	66,   26,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0, 	   0,   1200, 0			// 3  []
	#endif
},
{//�������ͺţ�[ 4 ]PRONET-15A ��A
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	845,  40,   5000, 12,   400,  4,    2500, 30,   1490, 3000, 0,    0,    400,  0,		// 0  []
	171,  22,   3000, 145,  500,  4,    2500, 30,   1490, 2000, 8500, 10,   500,  18,		// 1  EMG-15DSA����
	132,  40,   3000, 102,  600,  4,    2500, 30,   1490, 2000, 0,    0,    600,  0,		// 2  []
	66,   40,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0			// 3  []
	#elif AC_VOLT == AC_200V
	845,  40,   5000, 12,   400,  4,    2500, 30,   1490, 3000, 0,    0,    400,  0,		// 0  []
	111,  40,   3000, 145,  900,  4,    2500, 30,   1490, 2000, 4000, 20,   757,  18,		// 1  EMG-15ASA����
	132,  40,   3000, 102,  600,  4,    2500, 30,   1490, 2000, 0,    0,    600,  0,		// 2  []
	66,   40,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0			// 3  []
	#endif
},
{//�������ͺţ�[ 5 ]PRONET-20A ��A
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	845,  60,   3000, 12,   1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0,		// 0  []
	133,  30,   3000, 190,  640,  4,    2500, 30,   1490, 2000, 6500, 10,   640,  20,		// 1  EMG-20DSA����
	94,   30,   1500, 535,  640,  4,    2500, 30,   1490, 1000, 9500, 30,   640,  5,		// 2  EML-20DSA����
	66,   60,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0			// 3  []
	#elif AC_VOLT == AC_200V
	845,  60,   3000, 12,   1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0,		// 0  []
	71,   60,   3000, 190,  1200, 4,    2500, 30,   1490, 2000, 5000, 10,    1003, 0,		// 1  EMG-20ASA����  chxb
	43,   60,   1500, 535,  1200, 4,    2500, 30,   1490, 1000, 4000, 5,    1142, 5,		// 2  EML-20ASA����  chxb
	66,   60,   3000, 202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0			// 3  []
	#endif
},
{//�����ͺţ�[ 6 ]PRONET-30A  ��A
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	845,  80,  3000,  12,   1800, 4,    2500, 30,   1490, 1000, 0,    0,    1800, 0,		// 0  []
	130,  40,  3000,  413,  900,  4,    2500, 30,   1490, 2000, 9500, 10,   900,  30,		// 1  EMG-30DSA����
	128,  40,  1500,  839,  900,  4,    2500, 30,   1490, 1000, 12000,25,   900,  20,		// 2  EML-30DSA����
	253,  80,  2500,  267,  1600, 3,    2500, 30,   0,    2000, 0,	  20,   1600, 24		// 3  []
	#elif AC_VOLT == AC_200V
	845,  80,  3000,  12,   1800, 4,    2500, 30,   1490, 1000, 0,    0,    1800, 0,		// 0  []
	65,   65,  3000,  413,  1800, 4,    2500, 30,   1490, 2000, 5000, 15,   1573, 5,		// 1  EMG-30ASA����  chxb
	69,   65,  1500,  839,  1660, 4,    2500, 30,   1490, 1000, 7000, 10,    1534, 0,		// 2  EML-30ASA����  chxb
	253,  80,  2500,  267,  1600, 3,    2500, 30,   0,    2000, 0,	  20,   1600, 24		// 3  []
	#endif
},
{//�������ͺţ�[ 7 ]PRONET-50A ��A
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	845,  120,  3000, 12,   2800, 4,    2500, 30,   1490, 1000, 0,    0,    2800, 0,		// 0  []
	73,   70,   3000, 718,  1550, 4,    2500, 30,   1490, 2000, 4200, 9,    1550, 5,		// 1  EMG-50DSA����
	92,   70,   1500, 1144, 1220, 4,    2500, 30,   1490, 1000, 10000,15,   1220, 15,		// 2  EML-40DSA����
	104,  120,  2500, 900,  2300, 4,    2500, 30,   1940, 1500, 0, 	  10,   2800, 5			// 3  []
	#elif AC_VOLT == AC_200V
	845,  120,  3000, 12,   2800, 4,    2500, 30,   1490, 1000, 0,    0,    2800, 0,		// 0  []
	40,   90,   3000, 718,  2800, 4,    2500, 30,   1490, 2000, 3000, 8,    2805, 6,		// 1  EMG-50ASA����  chxb
	51,   90,   1500, 1144, 2180, 4,    2500, 30,   1490, 1000, 5000, 5,    2045, 0,		// 2  EML-40ASA����  chxb
	104,  120,  2500, 900,  2300, 4,    2500, 30,   1940, 1500, 0, 	  10,   2800, 5			// 3  []
	#endif
},
{//�������ͺţ�[ 8 ]PRONET-
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	121,  80,  2200,  1287, 1950, 4,    2500, 30,   0,    2000, 0, 	  20,   1950, 16,		// 0  []
	140,  80,  2500,  1145, 2400, 4,    2500, 30,   1490, 1500, 0, 	  10,   2105, 12,		// 1  []
     83,   80,  1500, 2716, 2100, 4,    2500, 30,   1490, 1000, 8000, 25,   2100, 20,		// 2  EML-75APA����(5K)
	106,  80,  2000,  1862, 1800, 4,    2500, 30,   1490, 1500, 8000, 30,   1631, 19		// 3  EMB-75DSA����
	#elif AC_VOLT == AC_200V
	121,  80,  2200,  1287, 1950, 4,    2500, 30,   0,    2000, 0, 	  20,   1950, 16,		// 0  []
	140,  80,  2500,  1145, 2400, 4,    2500, 30,   1490, 1500, 0, 	  10,   2105, 12,		// 1  []
	66,   80,  3000,  202,  1200, 4,    2500, 30,   1490, 2000, 0,    0,    1200, 0,		// 2  []
	106,  80,  2000,  1862, 1800, 4,    2500, 30,   1490, 1500, 0, 	  30,   1631, 19		// 3  []
	#endif
},
{//�������ͺţ�[ 9 ]PRONET-
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	54,   120,  1600, 4198, 2700, 4,    2500, 30,   26099,1500, 0, 	  20,   2700, 19,		// 0  []
	107,  120,  2200, 1567, 2820, 4,    2500, 30,   0,    2000, 0, 	  20,   2820, 12,		// 1  []
	81,   120,  3200, 1287, 2900, 4,    2500, 30,   0,    3000, 0, 	  20,   2900, 8,		// 2  []
	66,   120,  2000, 2716, 2800, 4,    2500, 30,   1490, 1500, 6000, 60,   2635, 12		// 3  EMB-1ADSA����
	#elif AC_VOLT == AC_200V
	54,   120,  1600, 4198, 2700, 4,    2500, 30,   26099,1500, 0, 	  20,   2700, 19,		// 0  []
	107,  120,  2200, 1567, 2820, 4,    2500, 30,   0,    2000, 0, 	  20,   2820, 12,		// 1  []
	81,   120,  3200, 1287, 2900, 4,    2500, 30,   0,    3000, 0, 	  20,   2900, 8,		// 2  []
	66,   120,  2000, 2716, 2800, 4,    2500, 30,   1490, 1500, 0, 	  60,   2635, 12		// 3  []
	#endif
},
{//�������ͺţ�[ A ]PRONET-
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	54,   120,  1600, 4198, 2700, 4,    2500, 30,   26099,1500, 0, 	  20,   2700, 19,		// 0  []
	40,   120,  2500, 3388, 3800, 4,    2500, 30,   1490, 2000, 3500, 15,   3580, 0,		// 1  EMG-1EDSA����
	81,   120,  3200, 1287, 2900, 4,    2500, 30,   0,    3000, 0, 	  20,   2900, 8,		// 2  []
	53,   120,  2000, 3388, 3800, 4,    2500, 30,   1490, 1500, 5500, 50,   3577, 10		// 3  EMB-1EDSA����
	#elif AC_VOLT == AC_200V
	54,   120,  1600, 4198, 2700, 4,    2500, 30,   26099,1500, 0, 	  20,   2700, 19,		// 0  []
	40,   120,  2500, 3388, 3800, 4,    2500, 30,   1490, 2000, 0, 	  15,   3580, 0,		// 1  []
	81,   120,  3200, 1287, 2900, 4,    2500, 30,   0,    3000, 0, 	  20,   2900, 8,		// 2  []
	53,   120,  2000, 3388, 3800, 4,    2500, 30,   1490, 1500, 0, 	  50,   3577, 10		// 3  []
	#endif
},
{//�������ͺţ�[ B ]PRONET-
// 	841   842   843   844   845   846   847   848   853   856   850   851   857   839
	#if AC_VOLT == AC_400V
	54,   120,  1600, 4198, 2700, 4,    2500, 30,   26099,1500, 0,	  0,    2700, 19,		// 0  []
	107,  120,  2200, 1567, 2820, 4,    2500, 30,   0,    2000, 0,	  0,    2820, 12,		// 1  []
	81,   120,  3200, 1287, 2900, 4,    2500, 30,   0,    3000, 0,	  0,    2900, 8,		// 2  []
	32,   240,  2000, 5766, 5200, 4,    2500, 30,   1490, 1500, 3000, 10,   5200, 6         // 3  EMB-2BDSA����
	#elif AC_VOLT == AC_200V
	54,   120,  1600, 4198, 2700, 4,    2500, 30,   26099,1500, 0,	  0,    2700, 19,		// 0  []
	107,  120,  2200, 1567, 2820, 4,    2500, 30,   0,    2000, 0,	  0,    2820, 12,		// 1  []
	81,   120,  3200, 1287, 2900, 4,    2500, 30,   0,    3000, 0,	  0,    2900, 8,		// 2  []
	32,   240,  2000, 5766, 5200, 4,    2500, 30,   1490, 1500, 0, 	  10,   5200, 6         // 3  []
	#endif
}
};

const int32 costab[] = 
{
 65536 ,  // 0
 65536 ,  // 1
 65536 ,  // 2
 65535 ,  // 3
 65534 ,  // 4
 65534 ,  // 5
 65532 ,  // 6
 65531 ,  // 7
 65530 ,  // 8
 65528 ,  // 9
 65526 ,  // 10
 65524 ,  // 11
 65522 ,  // 12
 65519 ,  // 13
 65516 ,  // 14
 65514 ,  // 15
 65510 ,  // 16
 65507 ,  // 17
 65504 ,  // 18
 65500 ,  // 19
 65496 ,  // 20
 65492 ,  // 21
 65488 ,  // 22
 65483 ,  // 23
 65479 ,  // 24
 65474 ,  // 25
 65469 ,  // 26
 65463 ,  // 27
 65458 ,  // 28
 65452 ,  // 29
 65446 ,  // 30
 65440 ,  // 31
 65434 ,  // 32
 65427 ,  // 33
 65421 ,  // 34
 65414 ,  // 35
 65407 ,  // 36
 65399 ,  // 37
 65392 ,  // 38
 65384 ,  // 39
 65376 ,  // 40
 65368 ,  // 41
 65360 ,  // 42
 65352 ,  // 43
 65343 ,  // 44
 65334 ,  // 45
 65325 ,  // 46
 65316 ,  // 47
 65306 ,  // 48
 65296 ,  // 49
 65287 ,  // 50
 65277 ,  // 51
 65266 ,  // 52
 65256 ,  // 53
 65245 ,  // 54
 65234 ,  // 55
 65223 ,  // 56
 65212 ,  // 57
 65201 ,  // 58
 65189 ,  // 59
 65177 ,  // 60
 65165 ,  // 61
 65153 ,  // 62
 65140 ,  // 63
 65128 ,  // 64
 65115 ,  // 65
 65102 ,  // 66
 65088 ,  // 67
 65075 ,  // 68
 65061 ,  // 69
 65048 ,  // 70
 65033 ,  // 71
 65019 ,  // 72
 65005 ,  // 73
 64990 ,  // 74
 64975 ,  // 75
 64960 ,  // 76
 64945 ,  // 77
 64930 ,  // 78
 64914 ,  // 79
 64898 ,  // 80
 64882 ,  // 81
 64866 ,  // 82
 64850 ,  // 83
 64833 ,  // 84
 64816 ,  // 85
 64799 ,  // 86
 64782 ,  // 87
 64765 ,  // 88
 64747 ,  // 89
 64729 ,  // 90
 64711 ,  // 91
 64693 ,  // 92
 64675 ,  // 93
 64656 ,  // 94
 64637 ,  // 95
 64618 ,  // 96
 64599 ,  // 97
 64580 ,  // 98
 64560 ,  // 99
 64540 ,  // 100
 64520 ,  // 101
 64500 ,  // 102
 64480 ,  // 103
 64459 ,  // 104
 64439 ,  // 105
 64418 ,  // 106
 64397 ,  // 107
 64375 ,  // 108
 64354 ,  // 109
 64332 ,  // 110
 64310 ,  // 111
 64288 ,  // 112
 64266 ,  // 113
 64243 ,  // 114
 64220 ,  // 115
 64197 ,  // 116
 64174 ,  // 117
 64151 ,  // 118
 64128 ,  // 119
 64104 ,  // 120
 64080 ,  // 121
 64056 ,  // 122
 64032 ,  // 123
 64007 ,  // 124
 63983 ,  // 125
 63958 ,  // 126
 63933 ,  // 127
 63907 ,  // 128
 63882 ,  // 129
 63856 ,  // 130
 63830 ,  // 131
 63804 ,  // 132
 63778 ,  // 133
 63752 ,  // 134
 63725 ,  // 135
 63698 ,  // 136
 63671 ,  // 137
 63644 ,  // 138
 63617 ,  // 139
 63589 ,  // 140
 63562 ,  // 141
 63534 ,  // 142
 63505 ,  // 143
 63477 ,  // 144
 63449 ,  // 145
 63420 ,  // 146
 63391 ,  // 147
 63362 ,  // 148
 63332 ,  // 149
 63303 ,  // 150
 63273 ,  // 151
 63243 ,  // 152
 63213 ,  // 153
 63183 ,  // 154
 63152 ,  // 155
 63122 ,  // 156
 63091 ,  // 157
 63060 ,  // 158
 63029 ,  // 159
 62997 ,  // 160
 62966 ,  // 161
 62934 ,  // 162
 62902 ,  // 163
 62870 ,  // 164
 62837 ,  // 165
 62805 ,  // 166
 62772 ,  // 167
 62739 ,  // 168
 62706 ,  // 169
 62672 ,  // 170
 62639 ,  // 171
 62605 ,  // 172
 62571 ,  // 173
 62537 ,  // 174
 62503 ,  // 175
 62468 ,  // 176
 62434 ,  // 177
 62399 ,  // 178
 62364 ,  // 179
 62328 ,  // 180
 62293 ,  // 181
 62257 ,  // 182
 62222 ,  // 183
 62186 ,  // 184
 62149 ,  // 185
 62113 ,  // 186
 62076 ,  // 187
 62040 ,  // 188
 62003 ,  // 189
 61966 ,  // 190
 61928 ,  // 191
 61891 ,  // 192
 61853 ,  // 193
 61815 ,  // 194
 61777 ,  // 195
 61739 ,  // 196
 61700 ,  // 197
 61662 ,  // 198
 61623 ,  // 199
 61584 ,  // 200
 61544 ,  // 201
 61505 ,  // 202
 61465 ,  // 203
 61426 ,  // 204
 61386 ,  // 205
 61346 ,  // 206
 61305 ,  // 207
 61265 ,  // 208
 61224 ,  // 209
 61183 ,  // 210
 61142 ,  // 211
 61101 ,  // 212
 61059 ,  // 213
 61018 ,  // 214
 60976 ,  // 215
 60934 ,  // 216
 60892 ,  // 217
 60849 ,  // 218
 60807 ,  // 219
 60764 ,  // 220
 60721 ,  // 221
 60678 ,  // 222
 60635 ,  // 223
 60591 ,  // 224
 60547 ,  // 225
 60504 ,  // 226
 60459 ,  // 227
 60415 ,  // 228
 60371 ,  // 229
 60326 ,  // 230
 60281 ,  // 231
 60236 ,  // 232
 60191 ,  // 233
 60146 ,  // 234
 60100 ,  // 235
 60055 ,  // 236
 60009 ,  // 237
 59963 ,  // 238
 59917 ,  // 239
 59870 ,  // 240
 59824 ,  // 241
 59777 ,  // 242
 59730 ,  // 243
 59683 ,  // 244
 59635 ,  // 245
 59588 ,  // 246
 59540 ,  // 247
 59492 ,  // 248
 59444 ,  // 249
 59396 ,  // 250
 59347 ,  // 251
 59299 ,  // 252
 59250 ,  // 253
 59201 ,  // 254
 59152 ,  // 255
 59102 ,  // 256
 59053 ,  // 257
 59003 ,  // 258
 58953 ,  // 259
 58903 ,  // 260
 58853 ,  // 261
 58803 ,  // 262
 58752 ,  // 263
 58701 ,  // 264
 58650 ,  // 265
 58599 ,  // 266
 58548 ,  // 267
 58497 ,  // 268
 58445 ,  // 269
 58393 ,  // 270
 58341 ,  // 271
 58289 ,  // 272
 58236 ,  // 273
 58184 ,  // 274
 58131 ,  // 275
 58078 ,  // 276
 58025 ,  // 277
 57972 ,  // 278
 57918 ,  // 279
 57865 ,  // 280
 57811 ,  // 281
 57757 ,  // 282
 57703 ,  // 283
 57649 ,  // 284
 57594 ,  // 285
 57539 ,  // 286
 57485 ,  // 287
 57430 ,  // 288
 57374 ,  // 289
 57319 ,  // 290
 57264 ,  // 291
 57208 ,  // 292
 57152 ,  // 293
 57096 ,  // 294
 57040 ,  // 295
 56983 ,  // 296
 56927 ,  // 297
 56870 ,  // 298
 56813 ,  // 299
 56756 ,  // 300
 56699 ,  // 301
 56641 ,  // 302
 56583 ,  // 303
 56526 ,  // 304
 56468 ,  // 305
 56410 ,  // 306
 56351 ,  // 307
 56293 ,  // 308
 56234 ,  // 309
 56175 ,  // 310
 56116 ,  // 311
 56057 ,  // 312
 55998 ,  // 313
 55938 ,  // 314
 55879 ,  // 315
 55819 ,  // 316
 55759 ,  // 317
 55699 ,  // 318
 55638 ,  // 319
 55578 ,  // 320
 55517 ,  // 321
 55456 ,  // 322
 55395 ,  // 323
 55334 ,  // 324
 55273 ,  // 325
 55211 ,  // 326
 55149 ,  // 327
 55087 ,  // 328
 55025 ,  // 329
 54963 ,  // 330
 54901 ,  // 331
 54838 ,  // 332
 54775 ,  // 333
 54713 ,  // 334
 54650 ,  // 335
 54586 ,  // 336
 54523 ,  // 337
 54459 ,  // 338
 54396 ,  // 339
 54332 ,  // 340
 54268 ,  // 341
 54204 ,  // 342
 54139 ,  // 343
 54075 ,  // 344
 54010 ,  // 345
 53945 ,  // 346
 53880 ,  // 347
 53815 ,  // 348
 53749 ,  // 349
 53684 ,  // 350
 53618 ,  // 351
 53552 ,  // 352
 53486 ,  // 353
 53420 ,  // 354
 53354 ,  // 355
 53287 ,  // 356
 53221 ,  // 357
 53154 ,  // 358
 53087 ,  // 359
 53020 ,  // 360
 52952 ,  // 361
 52885 ,  // 362
 52817 ,  // 363
 52750 ,  // 364
 52682 ,  // 365
 52613 ,  // 366
 52545 ,  // 367
 52477 ,  // 368
 52408 ,  // 369
 52339 ,  // 370
 52270 ,  // 371
 52201 ,  // 372
 52132 ,  // 373
 52063 ,  // 374
 51993 ,  // 375
 51923 ,  // 376
 51854 ,  // 377
 51784 ,  // 378
 51713 ,  // 379
 51643 ,  // 380
 51573 ,  // 381
 51502 ,  // 382
 51431 ,  // 383
 51360 ,  // 384
 51289 ,  // 385
 51218 ,  // 386
 51146 ,  // 387
 51075 ,  // 388
 51003 ,  // 389
 50931 ,  // 390
 50859 ,  // 391
 50787 ,  // 392
 50714 ,  // 393
 50642 ,  // 394
 50569 ,  // 395
 50496 ,  // 396
 50423 ,  // 397
 50350 ,  // 398
 50277 ,  // 399
 50203 ,  // 400
 50130 ,  // 401
 50056 ,  // 402
 49982 ,  // 403
 49908 ,  // 404
 49834 ,  // 405
 49760 ,  // 406
 49685 ,  // 407
 49610 ,  // 408
 49536 ,  // 409
 49461 ,  // 410
 49386 ,  // 411
 49310 ,  // 412
 49235 ,  // 413
 49159 ,  // 414
 49084 ,  // 415
 49008 ,  // 416
 48932 ,  // 417
 48856 ,  // 418
 48779 ,  // 419
 48703 ,  // 420
 48626 ,  // 421
 48549 ,  // 422
 48472 ,  // 423
 48395 ,  // 424
 48318 ,  // 425
 48241 ,  // 426
 48163 ,  // 427
 48086 ,  // 428
 48008 ,  // 429
 47930 ,  // 430
 47852 ,  // 431
 47774 ,  // 432
 47695 ,  // 433
 47617 ,  // 434
 47538 ,  // 435
 47459 ,  // 436
 47380 ,  // 437
 47301 ,  // 438
 47222 ,  // 439
 47143 ,  // 440
 47063 ,  // 441
 46983 ,  // 442
 46904 ,  // 443
 46824 ,  // 444
 46744 ,  // 445
 46663 ,  // 446
 46583 ,  // 447
 46502 ,  // 448
 46422 ,  // 449
 46341 ,  // 450
 46260 ,  // 451
 46179 ,  // 452
 46098 ,  // 453
 46016 ,  // 454
 45935 ,  // 455
 45853 ,  // 456
 45771 ,  // 457
 45689 ,  // 458
 45607 ,  // 459
 45525 ,  // 460
 45443 ,  // 461
 45360 ,  // 462
 45278 ,  // 463
 45195 ,  // 464
 45112 ,  // 465
 45029 ,  // 466
 44946 ,  // 467
 44862 ,  // 468
 44779 ,  // 469
 44695 ,  // 470
 44612 ,  // 471
 44528 ,  // 472
 44444 ,  // 473
 44360 ,  // 474
 44275 ,  // 475
 44191 ,  // 476
 44107 ,  // 477
 44022 ,  // 478
 43937 ,  // 479
 43852 ,  // 480
 43767 ,  // 481
 43682 ,  // 482
 43597 ,  // 483
 43511 ,  // 484
 43425 ,  // 485
 43340 ,  // 486
 43254 ,  // 487
 43168 ,  // 488
 43082 ,  // 489
 42995 ,  // 490
 42909 ,  // 491
 42823 ,  // 492
 42736 ,  // 493
 42649 ,  // 494
 42562 ,  // 495
 42475 ,  // 496
 42388 ,  // 497
 42301 ,  // 498
 42213 ,  // 499
 42126 ,  // 500
 42038 ,  // 501
 41950 ,  // 502
 41862 ,  // 503
 41774 ,  // 504
 41686 ,  // 505
 41598 ,  // 506
 41509 ,  // 507
 41421 ,  // 508
 41332 ,  // 509
 41243 ,  // 510
 41154 ,  // 511
 41065 ,  // 512
 40976 ,  // 513
 40887 ,  // 514
 40797 ,  // 515
 40708 ,  // 516
 40618 ,  // 517
 40528 ,  // 518
 40438 ,  // 519
 40348 ,  // 520
 40258 ,  // 521
 40167 ,  // 522
 40077 ,  // 523
 39986 ,  // 524
 39896 ,  // 525
 39805 ,  // 526
 39714 ,  // 527
 39623 ,  // 528
 39532 ,  // 529
 39441 ,  // 530
 39349 ,  // 531
 39258 ,  // 532
 39166 ,  // 533
 39074 ,  // 534
 38982 ,  // 535
 38890 ,  // 536
 38798 ,  // 537
 38706 ,  // 538
 38614 ,  // 539
 38521 ,  // 540
 38428 ,  // 541
 38336 ,  // 542
 38243 ,  // 543
 38150 ,  // 544
 38057 ,  // 545
 37964 ,  // 546
 37870 ,  // 547
 37777 ,  // 548
 37684 ,  // 549
 37590 ,  // 550
 37496 ,  // 551
 37402 ,  // 552
 37308 ,  // 553
 37214 ,  // 554
 37120 ,  // 555
 37026 ,  // 556
 36931 ,  // 557
 36837 ,  // 558
 36742 ,  // 559
 36647 ,  // 560
 36552 ,  // 561
 36457 ,  // 562
 36362 ,  // 563
 36267 ,  // 564
 36172 ,  // 565
 36076 ,  // 566
 35981 ,  // 567
 35885 ,  // 568
 35789 ,  // 569
 35693 ,  // 570
 35597 ,  // 571
 35501 ,  // 572
 35405 ,  // 573
 35309 ,  // 574
 35212 ,  // 575
 35116 ,  // 576
 35019 ,  // 577
 34923 ,  // 578
 34826 ,  // 579
 34729 ,  // 580
 34632 ,  // 581
 34535 ,  // 582
 34437 ,  // 583
 34340 ,  // 584
 34242 ,  // 585
 34145 ,  // 586
 34047 ,  // 587
 33949 ,  // 588
 33852 ,  // 589
 33754 ,  // 590
 33655 ,  // 591
 33557 ,  // 592
 33459 ,  // 593
 33361 ,  // 594
 33262 ,  // 595
 33163 ,  // 596
 33065 ,  // 597
 32966 ,  // 598
 32867 ,  // 599
 32768 ,  // 600
 32669 ,  // 601
 32570 ,  // 602
 32470 ,  // 603
 32371 ,  // 604
 32271 ,  // 605
 32172 ,  // 606
 32072 ,  // 607
 31972 ,  // 608
 31872 ,  // 609
 31772 ,  // 610
 31672 ,  // 611
 31572 ,  // 612
 31472 ,  // 613
 31372 ,  // 614
 31271 ,  // 615
 31171 ,  // 616
 31070 ,  // 617
 30969 ,  // 618
 30868 ,  // 619
 30767 ,  // 620
 30666 ,  // 621
 30565 ,  // 622
 30464 ,  // 623
 30363 ,  // 624
 30261 ,  // 625
 30160 ,  // 626
 30058 ,  // 627
 29956 ,  // 628
 29855 ,  // 629
 29753 ,  // 630
 29651 ,  // 631
 29549 ,  // 632
 29447 ,  // 633
 29344 ,  // 634
 29242 ,  // 635
 29140 ,  // 636
 29037 ,  // 637
 28935 ,  // 638
 28832 ,  // 639
 28729 ,  // 640
 28626 ,  // 641
 28523 ,  // 642
 28420 ,  // 643
 28317 ,  // 644
 28214 ,  // 645
 28111 ,  // 646
 28007 ,  // 647
 27904 ,  // 648
 27800 ,  // 649
 27697 ,  // 650
 27593 ,  // 651
 27489 ,  // 652
 27385 ,  // 653
 27281 ,  // 654
 27177 ,  // 655
 27073 ,  // 656
 26969 ,  // 657
 26865 ,  // 658
 26760 ,  // 659
 26656 ,  // 660
 26551 ,  // 661
 26447 ,  // 662
 26342 ,  // 663
 26237 ,  // 664
 26132 ,  // 665
 26027 ,  // 666
 25922 ,  // 667
 25817 ,  // 668
 25712 ,  // 669
 25607 ,  // 670
 25502 ,  // 671
 25396 ,  // 672
 25291 ,  // 673
 25185 ,  // 674
 25080 ,  // 675
 24974 ,  // 676
 24868 ,  // 677
 24762 ,  // 678
 24656 ,  // 679
 24550 ,  // 680
 24444 ,  // 681
 24338 ,  // 682
 24232 ,  // 683
 24125 ,  // 684
 24019 ,  // 685
 23913 ,  // 686
 23806 ,  // 687
 23699 ,  // 688
 23593 ,  // 689
 23486 ,  // 690
 23379 ,  // 691
 23272 ,  // 692
 23165 ,  // 693
 23058 ,  // 694
 22951 ,  // 695
 22844 ,  // 696
 22737 ,  // 697
 22629 ,  // 698
 22522 ,  // 699
 22415 ,  // 700
 22307 ,  // 701
 22200 ,  // 702
 22092 ,  // 703
 21984 ,  // 704
 21876 ,  // 705
 21769 ,  // 706
 21661 ,  // 707
 21553 ,  // 708
 21445 ,  // 709
 21336 ,  // 710
 21228 ,  // 711
 21120 ,  // 712
 21012 ,  // 713
 20903 ,  // 714
 20795 ,  // 715
 20686 ,  // 716
 20578 ,  // 717
 20469 ,  // 718
 20360 ,  // 719
 20252 ,  // 720
 20143 ,  // 721
 20034 ,  // 722
 19925 ,  // 723
 19816 ,  // 724
 19707 ,  // 725
 19598 ,  // 726
 19489 ,  // 727
 19380 ,  // 728
 19270 ,  // 729
 19161 ,  // 730
 19051 ,  // 731
 18942 ,  // 732
 18832 ,  // 733
 18723 ,  // 734
 18613 ,  // 735
 18504 ,  // 736
 18394 ,  // 737
 18284 ,  // 738
 18174 ,  // 739
 18064 ,  // 740
 17954 ,  // 741
 17844 ,  // 742
 17734 ,  // 743
 17624 ,  // 744
 17514 ,  // 745
 17403 ,  // 746
 17293 ,  // 747
 17183 ,  // 748
 17072 ,  // 749
 16962 ,  // 750
 16851 ,  // 751
 16741 ,  // 752
 16630 ,  // 753
 16520 ,  // 754
 16409 ,  // 755
 16298 ,  // 756
 16187 ,  // 757
 16076 ,  // 758
 15966 ,  // 759
 15855 ,  // 760
 15744 ,  // 761
 15633 ,  // 762
 15521 ,  // 763
 15410 ,  // 764
 15299 ,  // 765
 15188 ,  // 766
 15077 ,  // 767
 14965 ,  // 768
 14854 ,  // 769
 14742 ,  // 770
 14631 ,  // 771
 14519 ,  // 772
 14408 ,  // 773
 14296 ,  // 774
 14185 ,  // 775
 14073 ,  // 776
 13961 ,  // 777
 13849 ,  // 778
 13738 ,  // 779
 13626 ,  // 780
 13514 ,  // 781
 13402 ,  // 782
 13290 ,  // 783
 13178 ,  // 784
 13066 ,  // 785
 12954 ,  // 786
 12842 ,  // 787
 12729 ,  // 788
 12617 ,  // 789
 12505 ,  // 790
 12393 ,  // 791
 12280 ,  // 792
 12168 ,  // 793
 12055 ,  // 794
 11943 ,  // 795
 11831 ,  // 796
 11718 ,  // 797
 11605 ,  // 798
 11493 ,  // 799
 11380 ,  // 800
 11268 ,  // 801
 11155 ,  // 802
 11042 ,  // 803
 10929 ,  // 804
 10817 ,  // 805
 10704 ,  // 806
 10591 ,  // 807
 10478 ,  // 808
 10365 ,  // 809
 10252 ,  // 810
 10139 ,  // 811
 10026 ,  // 812
 9913 ,  // 813
 9800 ,  // 814
 9687 ,  // 815
 9574 ,  // 816
 9461 ,  // 817
 9347 ,  // 818
 9234 ,  // 819
 9121 ,  // 820
 9008 ,  // 821
 8894 ,  // 822
 8781 ,  // 823
 8668 ,  // 824
 8554 ,  // 825
 8441 ,  // 826
 8327 ,  // 827
 8214 ,  // 828
 8100 ,  // 829
 7987 ,  // 830
 7873 ,  // 831
 7760 ,  // 832
 7646 ,  // 833
 7533 ,  // 834
 7419 ,  // 835
 7305 ,  // 836
 7192 ,  // 837
 7078 ,  // 838
 6964 ,  // 839
 6850 ,  // 840
 6737 ,  // 841
 6623 ,  // 842
 6509 ,  // 843
 6395 ,  // 844
 6281 ,  // 845
 6167 ,  // 846
 6054 ,  // 847
 5940 ,  // 848
 5826 ,  // 849
 5712 ,  // 850
 5598 ,  // 851
 5484 ,  // 852
 5370 ,  // 853
 5256 ,  // 854
 5142 ,  // 855
 5028 ,  // 856
 4914 ,  // 857
 4800 ,  // 858
 4686 ,  // 859
 4572 ,  // 860
 4457 ,  // 861
 4343 ,  // 862
 4229 ,  // 863
 4115 ,  // 864
 4001 ,  // 865
 3887 ,  // 866
 3773 ,  // 867
 3658 ,  // 868
 3544 ,  // 869
 3430 ,  // 870
 3316 ,  // 871
 3201 ,  // 872
 3087 ,  // 873
 2973 ,  // 874
 2859 ,  // 875
 2744 ,  // 876
 2630 ,  // 877
 2516 ,  // 878
 2401 ,  // 879
 2287 ,  // 880
 2173 ,  // 881
 2059 ,  // 882
 1944 ,  // 883
 1830 ,  // 884
 1716 ,  // 885
 1601 ,  // 886
 1487 ,  // 887
 1372 ,  // 888
 1258 ,  // 889
 1144 ,  // 890
 1029 ,  // 891
 915 ,  // 892
 801 ,  // 893
 686 ,  // 894
 572 ,  // 895
 458 ,  // 896
 343 ,  // 897
 229 ,  // 898
 114 ,  // 899
 0 ,  // 900
-114 ,  // 901
-229 ,  // 902
-343 ,  // 903
-458 ,  // 904
-572 ,  // 905
-686 ,  // 906
-801 ,  // 907
-915 ,  // 908
-1029 ,  // 909
-1144 ,  // 910
-1258 ,  // 911
-1372 ,  // 912
-1487 ,  // 913
-1601 ,  // 914
-1716 ,  // 915
-1830 ,  // 916
-1944 ,  // 917
-2059 ,  // 918
-2173 ,  // 919
-2287 ,  // 920
-2401 ,  // 921
-2516 ,  // 922
-2630 ,  // 923
-2744 ,  // 924
-2859 ,  // 925
-2973 ,  // 926
-3087 ,  // 927
-3201 ,  // 928
-3316 ,  // 929
-3430 ,  // 930
-3544 ,  // 931
-3658 ,  // 932
-3773 ,  // 933
-3887 ,  // 934
-4001 ,  // 935
-4115 ,  // 936
-4229 ,  // 937
-4343 ,  // 938
-4457 ,  // 939
-4572 ,  // 940
-4686 ,  // 941
-4800 ,  // 942
-4914 ,  // 943
-5028 ,  // 944
-5142 ,  // 945
-5256 ,  // 946
-5370 ,  // 947
-5484 ,  // 948
-5598 ,  // 949
-5712 ,  // 950
-5826 ,  // 951
-5940 ,  // 952
-6054 ,  // 953
-6167 ,  // 954
-6281 ,  // 955
-6395 ,  // 956
-6509 ,  // 957
-6623 ,  // 958
-6737 ,  // 959
-6850 ,  // 960
-6964 ,  // 961
-7078 ,  // 962
-7192 ,  // 963
-7305 ,  // 964
-7419 ,  // 965
-7533 ,  // 966
-7646 ,  // 967
-7760 ,  // 968
-7873 ,  // 969
-7987 ,  // 970
-8100 ,  // 971
-8214 ,  // 972
-8327 ,  // 973
-8441 ,  // 974
-8554 ,  // 975
-8668 ,  // 976
-8781 ,  // 977
-8894 ,  // 978
-9008 ,  // 979
-9121 ,  // 980
-9234 ,  // 981
-9347 ,  // 982
-9461 ,  // 983
-9574 ,  // 984
-9687 ,  // 985
-9800 ,  // 986
-9913 ,  // 987
-10026 ,  // 988
-10139 ,  // 989
-10252 ,  // 990
-10365 ,  // 991
-10478 ,  // 992
-10591 ,  // 993
-10704 ,  // 994
-10817 ,  // 995
-10929 ,  // 996
-11042 ,  // 997
-11155 ,  // 998
-11268 ,  // 999
-11380 ,  // 1000
-11493 ,  // 1001
-11605 ,  // 1002
-11718 ,  // 1003
-11831 ,  // 1004
-11943 ,  // 1005
-12055 ,  // 1006
-12168 ,  // 1007
-12280 ,  // 1008
-12393 ,  // 1009
-12505 ,  // 1010
-12617 ,  // 1011
-12729 ,  // 1012
-12842 ,  // 1013
-12954 ,  // 1014
-13066 ,  // 1015
-13178 ,  // 1016
-13290 ,  // 1017
-13402 ,  // 1018
-13514 ,  // 1019
-13626 ,  // 1020
-13738 ,  // 1021
-13849 ,  // 1022
-13961 ,  // 1023
-14073 ,  // 1024
-14185 ,  // 1025
-14296 ,  // 1026
-14408 ,  // 1027
-14519 ,  // 1028
-14631 ,  // 1029
-14742 ,  // 1030
-14854 ,  // 1031
-14965 ,  // 1032
-15077 ,  // 1033
-15188 ,  // 1034
-15299 ,  // 1035
-15410 ,  // 1036
-15521 ,  // 1037
-15633 ,  // 1038
-15744 ,  // 1039
-15855 ,  // 1040
-15966 ,  // 1041
-16076 ,  // 1042
-16187 ,  // 1043
-16298 ,  // 1044
-16409 ,  // 1045
-16520 ,  // 1046
-16630 ,  // 1047
-16741 ,  // 1048
-16851 ,  // 1049
-16962 ,  // 1050
-17072 ,  // 1051
-17183 ,  // 1052
-17293 ,  // 1053
-17403 ,  // 1054
-17514 ,  // 1055
-17624 ,  // 1056
-17734 ,  // 1057
-17844 ,  // 1058
-17954 ,  // 1059
-18064 ,  // 1060
-18174 ,  // 1061
-18284 ,  // 1062
-18394 ,  // 1063
-18504 ,  // 1064
-18613 ,  // 1065
-18723 ,  // 1066
-18832 ,  // 1067
-18942 ,  // 1068
-19051 ,  // 1069
-19161 ,  // 1070
-19270 ,  // 1071
-19380 ,  // 1072
-19489 ,  // 1073
-19598 ,  // 1074
-19707 ,  // 1075
-19816 ,  // 1076
-19925 ,  // 1077
-20034 ,  // 1078
-20143 ,  // 1079
-20252 ,  // 1080
-20360 ,  // 1081
-20469 ,  // 1082
-20578 ,  // 1083
-20686 ,  // 1084
-20795 ,  // 1085
-20903 ,  // 1086
-21012 ,  // 1087
-21120 ,  // 1088
-21228 ,  // 1089
-21336 ,  // 1090
-21445 ,  // 1091
-21553 ,  // 1092
-21661 ,  // 1093
-21769 ,  // 1094
-21876 ,  // 1095
-21984 ,  // 1096
-22092 ,  // 1097
-22200 ,  // 1098
-22307 ,  // 1099
-22415 ,  // 1100
-22522 ,  // 1101
-22629 ,  // 1102
-22737 ,  // 1103
-22844 ,  // 1104
-22951 ,  // 1105
-23058 ,  // 1106
-23165 ,  // 1107
-23272 ,  // 1108
-23379 ,  // 1109
-23486 ,  // 1110
-23593 ,  // 1111
-23699 ,  // 1112
-23806 ,  // 1113
-23913 ,  // 1114
-24019 ,  // 1115
-24125 ,  // 1116
-24232 ,  // 1117
-24338 ,  // 1118
-24444 ,  // 1119
-24550 ,  // 1120
-24656 ,  // 1121
-24762 ,  // 1122
-24868 ,  // 1123
-24974 ,  // 1124
-25080 ,  // 1125
-25185 ,  // 1126
-25291 ,  // 1127
-25396 ,  // 1128
-25502 ,  // 1129
-25607 ,  // 1130
-25712 ,  // 1131
-25817 ,  // 1132
-25922 ,  // 1133
-26027 ,  // 1134
-26132 ,  // 1135
-26237 ,  // 1136
-26342 ,  // 1137
-26447 ,  // 1138
-26551 ,  // 1139
-26656 ,  // 1140
-26760 ,  // 1141
-26865 ,  // 1142
-26969 ,  // 1143
-27073 ,  // 1144
-27177 ,  // 1145
-27281 ,  // 1146
-27385 ,  // 1147
-27489 ,  // 1148
-27593 ,  // 1149
-27697 ,  // 1150
-27800 ,  // 1151
-27904 ,  // 1152
-28007 ,  // 1153
-28111 ,  // 1154
-28214 ,  // 1155
-28317 ,  // 1156
-28420 ,  // 1157
-28523 ,  // 1158
-28626 ,  // 1159
-28729 ,  // 1160
-28832 ,  // 1161
-28935 ,  // 1162
-29037 ,  // 1163
-29140 ,  // 1164
-29242 ,  // 1165
-29344 ,  // 1166
-29447 ,  // 1167
-29549 ,  // 1168
-29651 ,  // 1169
-29753 ,  // 1170
-29855 ,  // 1171
-29956 ,  // 1172
-30058 ,  // 1173
-30160 ,  // 1174
-30261 ,  // 1175
-30363 ,  // 1176
-30464 ,  // 1177
-30565 ,  // 1178
-30666 ,  // 1179
-30767 ,  // 1180
-30868 ,  // 1181
-30969 ,  // 1182
-31070 ,  // 1183
-31171 ,  // 1184
-31271 ,  // 1185
-31372 ,  // 1186
-31472 ,  // 1187
-31572 ,  // 1188
-31672 ,  // 1189
-31772 ,  // 1190
-31872 ,  // 1191
-31972 ,  // 1192
-32072 ,  // 1193
-32172 ,  // 1194
-32271 ,  // 1195
-32371 ,  // 1196
-32470 ,  // 1197
-32570 ,  // 1198
-32669 ,  // 1199
-32768 ,  // 1200
-32867 ,  // 1201
-32966 ,  // 1202
-33065 ,  // 1203
-33163 ,  // 1204
-33262 ,  // 1205
-33361 ,  // 1206
-33459 ,  // 1207
-33557 ,  // 1208
-33655 ,  // 1209
-33754 ,  // 1210
-33852 ,  // 1211
-33949 ,  // 1212
-34047 ,  // 1213
-34145 ,  // 1214
-34242 ,  // 1215
-34340 ,  // 1216
-34437 ,  // 1217
-34535 ,  // 1218
-34632 ,  // 1219
-34729 ,  // 1220
-34826 ,  // 1221
-34923 ,  // 1222
-35019 ,  // 1223
-35116 ,  // 1224
-35212 ,  // 1225
-35309 ,  // 1226
-35405 ,  // 1227
-35501 ,  // 1228
-35597 ,  // 1229
-35693 ,  // 1230
-35789 ,  // 1231
-35885 ,  // 1232
-35981 ,  // 1233
-36076 ,  // 1234
-36172 ,  // 1235
-36267 ,  // 1236
-36362 ,  // 1237
-36457 ,  // 1238
-36552 ,  // 1239
-36647 ,  // 1240
-36742 ,  // 1241
-36837 ,  // 1242
-36931 ,  // 1243
-37026 ,  // 1244
-37120 ,  // 1245
-37214 ,  // 1246
-37308 ,  // 1247
-37402 ,  // 1248
-37496 ,  // 1249
-37590 ,  // 1250
-37684 ,  // 1251
-37777 ,  // 1252
-37870 ,  // 1253
-37964 ,  // 1254
-38057 ,  // 1255
-38150 ,  // 1256
-38243 ,  // 1257
-38336 ,  // 1258
-38428 ,  // 1259
-38521 ,  // 1260
-38614 ,  // 1261
-38706 ,  // 1262
-38798 ,  // 1263
-38890 ,  // 1264
-38982 ,  // 1265
-39074 ,  // 1266
-39166 ,  // 1267
-39258 ,  // 1268
-39349 ,  // 1269
-39441 ,  // 1270
-39532 ,  // 1271
-39623 ,  // 1272
-39714 ,  // 1273
-39805 ,  // 1274
-39896 ,  // 1275
-39986 ,  // 1276
-40077 ,  // 1277
-40167 ,  // 1278
-40258 ,  // 1279
-40348 ,  // 1280
-40438 ,  // 1281
-40528 ,  // 1282
-40618 ,  // 1283
-40708 ,  // 1284
-40797 ,  // 1285
-40887 ,  // 1286
-40976 ,  // 1287
-41065 ,  // 1288
-41154 ,  // 1289
-41243 ,  // 1290
-41332 ,  // 1291
-41421 ,  // 1292
-41509 ,  // 1293
-41598 ,  // 1294
-41686 ,  // 1295
-41774 ,  // 1296
-41862 ,  // 1297
-41950 ,  // 1298
-42038 ,  // 1299
-42126 ,  // 1300
-42213 ,  // 1301
-42301 ,  // 1302
-42388 ,  // 1303
-42475 ,  // 1304
-42562 ,  // 1305
-42649 ,  // 1306
-42736 ,  // 1307
-42823 ,  // 1308
-42909 ,  // 1309
-42995 ,  // 1310
-43082 ,  // 1311
-43168 ,  // 1312
-43254 ,  // 1313
-43340 ,  // 1314
-43425 ,  // 1315
-43511 ,  // 1316
-43597 ,  // 1317
-43682 ,  // 1318
-43767 ,  // 1319
-43852 ,  // 1320
-43937 ,  // 1321
-44022 ,  // 1322
-44107 ,  // 1323
-44191 ,  // 1324
-44275 ,  // 1325
-44360 ,  // 1326
-44444 ,  // 1327
-44528 ,  // 1328
-44612 ,  // 1329
-44695 ,  // 1330
-44779 ,  // 1331
-44862 ,  // 1332
-44946 ,  // 1333
-45029 ,  // 1334
-45112 ,  // 1335
-45195 ,  // 1336
-45278 ,  // 1337
-45360 ,  // 1338
-45443 ,  // 1339
-45525 ,  // 1340
-45607 ,  // 1341
-45689 ,  // 1342
-45771 ,  // 1343
-45853 ,  // 1344
-45935 ,  // 1345
-46016 ,  // 1346
-46098 ,  // 1347
-46179 ,  // 1348
-46260 ,  // 1349
-46341 ,  // 1350
-46422 ,  // 1351
-46502 ,  // 1352
-46583 ,  // 1353
-46663 ,  // 1354
-46744 ,  // 1355
-46824 ,  // 1356
-46904 ,  // 1357
-46983 ,  // 1358
-47063 ,  // 1359
-47143 ,  // 1360
-47222 ,  // 1361
-47301 ,  // 1362
-47380 ,  // 1363
-47459 ,  // 1364
-47538 ,  // 1365
-47617 ,  // 1366
-47695 ,  // 1367
-47774 ,  // 1368
-47852 ,  // 1369
-47930 ,  // 1370
-48008 ,  // 1371
-48086 ,  // 1372
-48163 ,  // 1373
-48241 ,  // 1374
-48318 ,  // 1375
-48395 ,  // 1376
-48472 ,  // 1377
-48549 ,  // 1378
-48626 ,  // 1379
-48703 ,  // 1380
-48779 ,  // 1381
-48856 ,  // 1382
-48932 ,  // 1383
-49008 ,  // 1384
-49084 ,  // 1385
-49159 ,  // 1386
-49235 ,  // 1387
-49310 ,  // 1388
-49386 ,  // 1389
-49461 ,  // 1390
-49536 ,  // 1391
-49610 ,  // 1392
-49685 ,  // 1393
-49760 ,  // 1394
-49834 ,  // 1395
-49908 ,  // 1396
-49982 ,  // 1397
-50056 ,  // 1398
-50130 ,  // 1399
-50203 ,  // 1400
-50277 ,  // 1401
-50350 ,  // 1402
-50423 ,  // 1403
-50496 ,  // 1404
-50569 ,  // 1405
-50642 ,  // 1406
-50714 ,  // 1407
-50787 ,  // 1408
-50859 ,  // 1409
-50931 ,  // 1410
-51003 ,  // 1411
-51075 ,  // 1412
-51146 ,  // 1413
-51218 ,  // 1414
-51289 ,  // 1415
-51360 ,  // 1416
-51431 ,  // 1417
-51502 ,  // 1418
-51573 ,  // 1419
-51643 ,  // 1420
-51713 ,  // 1421
-51784 ,  // 1422
-51854 ,  // 1423
-51923 ,  // 1424
-51993 ,  // 1425
-52063 ,  // 1426
-52132 ,  // 1427
-52201 ,  // 1428
-52270 ,  // 1429
-52339 ,  // 1430
-52408 ,  // 1431
-52477 ,  // 1432
-52545 ,  // 1433
-52613 ,  // 1434
-52682 ,  // 1435
-52750 ,  // 1436
-52817 ,  // 1437
-52885 ,  // 1438
-52952 ,  // 1439
-53020 ,  // 1440
-53087 ,  // 1441
-53154 ,  // 1442
-53221 ,  // 1443
-53287 ,  // 1444
-53354 ,  // 1445
-53420 ,  // 1446
-53486 ,  // 1447
-53552 ,  // 1448
-53618 ,  // 1449
-53684 ,  // 1450
-53749 ,  // 1451
-53815 ,  // 1452
-53880 ,  // 1453
-53945 ,  // 1454
-54010 ,  // 1455
-54075 ,  // 1456
-54139 ,  // 1457
-54204 ,  // 1458
-54268 ,  // 1459
-54332 ,  // 1460
-54396 ,  // 1461
-54459 ,  // 1462
-54523 ,  // 1463
-54586 ,  // 1464
-54650 ,  // 1465
-54713 ,  // 1466
-54775 ,  // 1467
-54838 ,  // 1468
-54901 ,  // 1469
-54963 ,  // 1470
-55025 ,  // 1471
-55087 ,  // 1472
-55149 ,  // 1473
-55211 ,  // 1474
-55273 ,  // 1475
-55334 ,  // 1476
-55395 ,  // 1477
-55456 ,  // 1478
-55517 ,  // 1479
-55578 ,  // 1480
-55638 ,  // 1481
-55699 ,  // 1482
-55759 ,  // 1483
-55819 ,  // 1484
-55879 ,  // 1485
-55938 ,  // 1486
-55998 ,  // 1487
-56057 ,  // 1488
-56116 ,  // 1489
-56175 ,  // 1490
-56234 ,  // 1491
-56293 ,  // 1492
-56351 ,  // 1493
-56410 ,  // 1494
-56468 ,  // 1495
-56526 ,  // 1496
-56583 ,  // 1497
-56641 ,  // 1498
-56699 ,  // 1499
-56756 ,  // 1500
-56813 ,  // 1501
-56870 ,  // 1502
-56927 ,  // 1503
-56983 ,  // 1504
-57040 ,  // 1505
-57096 ,  // 1506
-57152 ,  // 1507
-57208 ,  // 1508
-57264 ,  // 1509
-57319 ,  // 1510
-57374 ,  // 1511
-57430 ,  // 1512
-57485 ,  // 1513
-57539 ,  // 1514
-57594 ,  // 1515
-57649 ,  // 1516
-57703 ,  // 1517
-57757 ,  // 1518
-57811 ,  // 1519
-57865 ,  // 1520
-57918 ,  // 1521
-57972 ,  // 1522
-58025 ,  // 1523
-58078 ,  // 1524
-58131 ,  // 1525
-58184 ,  // 1526
-58236 ,  // 1527
-58289 ,  // 1528
-58341 ,  // 1529
-58393 ,  // 1530
-58445 ,  // 1531
-58497 ,  // 1532
-58548 ,  // 1533
-58599 ,  // 1534
-58650 ,  // 1535
-58701 ,  // 1536
-58752 ,  // 1537
-58803 ,  // 1538
-58853 ,  // 1539
-58903 ,  // 1540
-58953 ,  // 1541
-59003 ,  // 1542
-59053 ,  // 1543
-59102 ,  // 1544
-59152 ,  // 1545
-59201 ,  // 1546
-59250 ,  // 1547
-59299 ,  // 1548
-59347 ,  // 1549
-59396 ,  // 1550
-59444 ,  // 1551
-59492 ,  // 1552
-59540 ,  // 1553
-59588 ,  // 1554
-59635 ,  // 1555
-59683 ,  // 1556
-59730 ,  // 1557
-59777 ,  // 1558
-59824 ,  // 1559
-59870 ,  // 1560
-59917 ,  // 1561
-59963 ,  // 1562
-60009 ,  // 1563
-60055 ,  // 1564
-60100 ,  // 1565
-60146 ,  // 1566
-60191 ,  // 1567
-60236 ,  // 1568
-60281 ,  // 1569
-60326 ,  // 1570
-60371 ,  // 1571
-60415 ,  // 1572
-60459 ,  // 1573
-60504 ,  // 1574
-60547 ,  // 1575
-60591 ,  // 1576
-60635 ,  // 1577
-60678 ,  // 1578
-60721 ,  // 1579
-60764 ,  // 1580
-60807 ,  // 1581
-60849 ,  // 1582
-60892 ,  // 1583
-60934 ,  // 1584
-60976 ,  // 1585
-61018 ,  // 1586
-61059 ,  // 1587
-61101 ,  // 1588
-61142 ,  // 1589
-61183 ,  // 1590
-61224 ,  // 1591
-61265 ,  // 1592
-61305 ,  // 1593
-61346 ,  // 1594
-61386 ,  // 1595
-61426 ,  // 1596
-61465 ,  // 1597
-61505 ,  // 1598
-61544 ,  // 1599
-61584 ,  // 1600
-61623 ,  // 1601
-61662 ,  // 1602
-61700 ,  // 1603
-61739 ,  // 1604
-61777 ,  // 1605
-61815 ,  // 1606
-61853 ,  // 1607
-61891 ,  // 1608
-61928 ,  // 1609
-61966 ,  // 1610
-62003 ,  // 1611
-62040 ,  // 1612
-62076 ,  // 1613
-62113 ,  // 1614
-62149 ,  // 1615
-62186 ,  // 1616
-62222 ,  // 1617
-62257 ,  // 1618
-62293 ,  // 1619
-62328 ,  // 1620
-62364 ,  // 1621
-62399 ,  // 1622
-62434 ,  // 1623
-62468 ,  // 1624
-62503 ,  // 1625
-62537 ,  // 1626
-62571 ,  // 1627
-62605 ,  // 1628
-62639 ,  // 1629
-62672 ,  // 1630
-62706 ,  // 1631
-62739 ,  // 1632
-62772 ,  // 1633
-62805 ,  // 1634
-62837 ,  // 1635
-62870 ,  // 1636
-62902 ,  // 1637
-62934 ,  // 1638
-62966 ,  // 1639
-62997 ,  // 1640
-63029 ,  // 1641
-63060 ,  // 1642
-63091 ,  // 1643
-63122 ,  // 1644
-63152 ,  // 1645
-63183 ,  // 1646
-63213 ,  // 1647
-63243 ,  // 1648
-63273 ,  // 1649
-63303 ,  // 1650
-63332 ,  // 1651
-63362 ,  // 1652
-63391 ,  // 1653
-63420 ,  // 1654
-63449 ,  // 1655
-63477 ,  // 1656
-63505 ,  // 1657
-63534 ,  // 1658
-63562 ,  // 1659
-63589 ,  // 1660
-63617 ,  // 1661
-63644 ,  // 1662
-63671 ,  // 1663
-63698 ,  // 1664
-63725 ,  // 1665
-63752 ,  // 1666
-63778 ,  // 1667
-63804 ,  // 1668
-63830 ,  // 1669
-63856 ,  // 1670
-63882 ,  // 1671
-63907 ,  // 1672
-63933 ,  // 1673
-63958 ,  // 1674
-63983 ,  // 1675
-64007 ,  // 1676
-64032 ,  // 1677
-64056 ,  // 1678
-64080 ,  // 1679
-64104 ,  // 1680
-64128 ,  // 1681
-64151 ,  // 1682
-64174 ,  // 1683
-64197 ,  // 1684
-64220 ,  // 1685
-64243 ,  // 1686
-64266 ,  // 1687
-64288 ,  // 1688
-64310 ,  // 1689
-64332 ,  // 1690
-64354 ,  // 1691
-64375 ,  // 1692
-64397 ,  // 1693
-64418 ,  // 1694
-64439 ,  // 1695
-64459 ,  // 1696
-64480 ,  // 1697
-64500 ,  // 1698
-64520 ,  // 1699
-64540 ,  // 1700
-64560 ,  // 1701
-64580 ,  // 1702
-64599 ,  // 1703
-64618 ,  // 1704
-64637 ,  // 1705
-64656 ,  // 1706
-64675 ,  // 1707
-64693 ,  // 1708
-64711 ,  // 1709
-64729 ,  // 1710
-64747 ,  // 1711
-64765 ,  // 1712
-64782 ,  // 1713
-64799 ,  // 1714
-64816 ,  // 1715
-64833 ,  // 1716
-64850 ,  // 1717
-64866 ,  // 1718
-64882 ,  // 1719
-64898 ,  // 1720
-64914 ,  // 1721
-64930 ,  // 1722
-64945 ,  // 1723
-64960 ,  // 1724
-64975 ,  // 1725
-64990 ,  // 1726
-65005 ,  // 1727
-65019 ,  // 1728
-65033 ,  // 1729
-65048 ,  // 1730
-65061 ,  // 1731
-65075 ,  // 1732
-65088 ,  // 1733
-65102 ,  // 1734
-65115 ,  // 1735
-65128 ,  // 1736
-65140 ,  // 1737
-65153 ,  // 1738
-65165 ,  // 1739
-65177 ,  // 1740
-65189 ,  // 1741
-65201 ,  // 1742
-65212 ,  // 1743
-65223 ,  // 1744
-65234 ,  // 1745
-65245 ,  // 1746
-65256 ,  // 1747
-65266 ,  // 1748
-65277 ,  // 1749
-65287 ,  // 1750
-65296 ,  // 1751
-65306 ,  // 1752
-65316 ,  // 1753
-65325 ,  // 1754
-65334 ,  // 1755
-65343 ,  // 1756
-65352 ,  // 1757
-65360 ,  // 1758
-65368 ,  // 1759
-65376 ,  // 1760
-65384 ,  // 1761
-65392 ,  // 1762
-65399 ,  // 1763
-65407 ,  // 1764
-65414 ,  // 1765
-65421 ,  // 1766
-65427 ,  // 1767
-65434 ,  // 1768
-65440 ,  // 1769
-65446 ,  // 1770
-65452 ,  // 1771
-65458 ,  // 1772
-65463 ,  // 1773
-65469 ,  // 1774
-65474 ,  // 1775
-65479 ,  // 1776
-65483 ,  // 1777
-65488 ,  // 1778
-65492 ,  // 1779
-65496 ,  // 1780
-65500 ,  // 1781
-65504 ,  // 1782
-65507 ,  // 1783
-65510 ,  // 1784
-65514 ,  // 1785
-65516 ,  // 1786
-65519 ,  // 1787
-65522 ,  // 1788
-65524 ,  // 1789
-65526 ,  // 1790
-65528 ,  // 1791
-65530 ,  // 1792
-65531 ,  // 1793
-65532 ,  // 1794
-65534 ,  // 1795
-65534 ,  // 1796
-65535 ,  // 1797
-65536 ,  // 1798
-65536 ,  // 1799
};



